// Namespaced Header
// This file is automatically generated by CVMClient/Scripts/generate_namespace.sh

#ifndef __NS_SYMBOL_VXL
// We need to have multiple levels of macros here so that __NAMESPACE_PREFIX_ is
// properly replaced by the time we concatenate the namespace prefix.
#define __NS_REWRITE_VXL(ns, symbol) ns ## _ ## symbol
#define __NS_BRIDGE_VXL(ns, symbol) __NS_REWRITE_VXL(ns, symbol)
#define __NS_SYMBOL_VXL(symbol) __NS_BRIDGE_VXL(VXL_NAMESPACE, symbol)
#endif


// C++ Namespaces
#ifndef cataylor
#define cataylor __NS_SYMBOL_VXL(cataylor)
#endif

// Obj-C Classes
#ifndef AsyncSocket
#define AsyncSocket __NS_SYMBOL_VXL(AsyncSocket)
#endif

#ifndef BasicReaderSocket
#define BasicReaderSocket __NS_SYMBOL_VXL(BasicReaderSocket)
#endif

#ifndef CVMConnectionMonitor
#define CVMConnectionMonitor __NS_SYMBOL_VXL(CVMConnectionMonitor)
#endif

#ifndef CVMEventSerializer
#define CVMEventSerializer __NS_SYMBOL_VXL(CVMEventSerializer)
#endif

#ifndef CVMSessionMetric
#define CVMSessionMetric __NS_SYMBOL_VXL(CVMSessionMetric)
#endif

#ifndef OpenUDID
#define OpenUDID __NS_SYMBOL_VXL(OpenUDID)
#endif

#ifndef Reachability
#define Reachability __NS_SYMBOL_VXL(Reachability)
#endif

#ifndef RotatedUITouch
#define RotatedUITouch __NS_SYMBOL_VXL(RotatedUITouch)
#endif

#ifndef VXLAppInfo
#define VXLAppInfo __NS_SYMBOL_VXL(VXLAppInfo)
#endif

#ifndef VXLAppStream
#define VXLAppStream __NS_SYMBOL_VXL(VXLAppStream)
#endif

#ifndef VXLAppView
#define VXLAppView __NS_SYMBOL_VXL(VXLAppView)
#endif

#ifndef VXLAudioAACPlayer
#define VXLAudioAACPlayer __NS_SYMBOL_VXL(VXLAudioAACPlayer)
#endif

#ifndef VXLAudioOpusPlayer
#define VXLAudioOpusPlayer __NS_SYMBOL_VXL(VXLAudioOpusPlayer)
#endif

#ifndef VXLAudioPlayer
#define VXLAudioPlayer __NS_SYMBOL_VXL(VXLAudioPlayer)
#endif

#ifndef VXLCampaign
#define VXLCampaign __NS_SYMBOL_VXL(VXLCampaign)
#endif

#ifndef VXLClient
#define VXLClient __NS_SYMBOL_VXL(VXLClient)
#endif

#ifndef VXLClientJSBridge
#define VXLClientJSBridge __NS_SYMBOL_VXL(VXLClientJSBridge)
#endif

#ifndef VXLEasing
#define VXLEasing __NS_SYMBOL_VXL(VXLEasing)
#endif

#ifndef VXLGLFrameView
#define VXLGLFrameView __NS_SYMBOL_VXL(VXLGLFrameView)
#endif

#ifndef VXLInput
#define VXLInput __NS_SYMBOL_VXL(VXLInput)
#endif

#ifndef VXLInterstitialJSBridge
#define VXLInterstitialJSBridge __NS_SYMBOL_VXL(VXLInterstitialJSBridge)
#endif

#ifndef VXLInterstitialViewController
#define VXLInterstitialViewController __NS_SYMBOL_VXL(VXLInterstitialViewController)
#endif

#ifndef VXLModel
#define VXLModel __NS_SYMBOL_VXL(VXLModel)
#endif

#ifndef VXLOrientationInput
#define VXLOrientationInput __NS_SYMBOL_VXL(VXLOrientationInput)
#endif

#ifndef VXLPassthroughWebView
#define VXLPassthroughWebView __NS_SYMBOL_VXL(VXLPassthroughWebView)
#endif

#ifndef VXLRTPAppStream
#define VXLRTPAppStream __NS_SYMBOL_VXL(VXLRTPAppStream)
#endif

#ifndef VXLUtilities
#define VXLUtilities __NS_SYMBOL_VXL(VXLUtilities)
#endif

#ifndef VXLWSAppStream
#define VXLWSAppStream __NS_SYMBOL_VXL(VXLWSAppStream)
#endif

#ifndef WebViewJavascriptBridge
#define WebViewJavascriptBridge __NS_SYMBOL_VXL(WebViewJavascriptBridge)
#endif

// Functions
#ifndef SHA1Input
#define SHA1Input __NS_SYMBOL_VXL(SHA1Input)
#endif

#ifndef SHA1PadMessage
#define SHA1PadMessage __NS_SYMBOL_VXL(SHA1PadMessage)
#endif

#ifndef SHA1ProcessMessageBlock
#define SHA1ProcessMessageBlock __NS_SYMBOL_VXL(SHA1ProcessMessageBlock)
#endif

#ifndef SHA1Reset
#define SHA1Reset __NS_SYMBOL_VXL(SHA1Reset)
#endif

#ifndef SHA1Result
#define SHA1Result __NS_SYMBOL_VXL(SHA1Result)
#endif

#ifndef TPCircularBufferCleanup
#define TPCircularBufferCleanup __NS_SYMBOL_VXL(TPCircularBufferCleanup)
#endif

#ifndef TPCircularBufferClear
#define TPCircularBufferClear __NS_SYMBOL_VXL(TPCircularBufferClear)
#endif

#ifndef TPCircularBufferConsumeNextBufferListPartial
#define TPCircularBufferConsumeNextBufferListPartial __NS_SYMBOL_VXL(TPCircularBufferConsumeNextBufferListPartial)
#endif

#ifndef TPCircularBufferCopyAudioBufferList
#define TPCircularBufferCopyAudioBufferList __NS_SYMBOL_VXL(TPCircularBufferCopyAudioBufferList)
#endif

#ifndef TPCircularBufferDequeueBufferListFrames
#define TPCircularBufferDequeueBufferListFrames __NS_SYMBOL_VXL(TPCircularBufferDequeueBufferListFrames)
#endif

#ifndef TPCircularBufferInit
#define TPCircularBufferInit __NS_SYMBOL_VXL(TPCircularBufferInit)
#endif

#ifndef TPCircularBufferNextBufferListAfter
#define TPCircularBufferNextBufferListAfter __NS_SYMBOL_VXL(TPCircularBufferNextBufferListAfter)
#endif

#ifndef TPCircularBufferPeek
#define TPCircularBufferPeek __NS_SYMBOL_VXL(TPCircularBufferPeek)
#endif

#ifndef TPCircularBufferPeekContiguous
#define TPCircularBufferPeekContiguous __NS_SYMBOL_VXL(TPCircularBufferPeekContiguous)
#endif

#ifndef TPCircularBufferPrepareEmptyAudioBufferList
#define TPCircularBufferPrepareEmptyAudioBufferList __NS_SYMBOL_VXL(TPCircularBufferPrepareEmptyAudioBufferList)
#endif

#ifndef TPCircularBufferProduceAudioBufferList
#define TPCircularBufferProduceAudioBufferList __NS_SYMBOL_VXL(TPCircularBufferProduceAudioBufferList)
#endif

#ifndef _ZN8cataylor10memxor_addEPvPKvS2_i
#define _ZN8cataylor10memxor_addEPvPKvS2_i __NS_SYMBOL_VXL(_ZN8cataylor10memxor_addEPvPKvS2_i)
#endif

#ifndef _ZN8cataylor10memxor_setEPvPKvS2_i
#define _ZN8cataylor10memxor_setEPvPKvS2_i __NS_SYMBOL_VXL(_ZN8cataylor10memxor_setEPvPKvS2_i)
#endif

#ifndef _ZN8cataylor6memxorEPvPKvi
#define _ZN8cataylor6memxorEPvPKvi __NS_SYMBOL_VXL(_ZN8cataylor6memxorEPvPKvi)
#endif

#ifndef _ZN8cataylor8wirehair15GetResultStringENS0_6ResultE
#define _ZN8cataylor8wirehair15GetResultStringENS0_6ResultE __NS_SYMBOL_VXL(_ZN8cataylor8wirehair15GetResultStringENS0_6ResultE)
#endif

#ifndef _ZN8cataylor8wirehair5Codec10DecodeFeedEjPKv
#define _ZN8cataylor8wirehair5Codec10DecodeFeedEjPKv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec10DecodeFeedEjPKv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec10EncodeFeedEPKv
#define _ZN8cataylor8wirehair5Codec10EncodeFeedEPKv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec10EncodeFeedEPKv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec10FreeMatrixEv
#define _ZN8cataylor8wirehair5Codec10FreeMatrixEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec10FreeMatrixEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec10SubstituteEv
#define _ZN8cataylor8wirehair5Codec10SubstituteEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec10SubstituteEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec11SolveMatrixEv
#define _ZN8cataylor8wirehair5Codec11SolveMatrixEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec11SolveMatrixEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec12ChooseMatrixEii
#define _ZN8cataylor8wirehair5Codec12ChooseMatrixEii __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec12ChooseMatrixEii)
#endif

#ifndef _ZN8cataylor8wirehair5Codec12PeelDiagonalEv
#define _ZN8cataylor8wirehair5Codec12PeelDiagonalEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec12PeelDiagonalEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec12SetHeavyRowsEv
#define _ZN8cataylor8wirehair5Codec12SetHeavyRowsEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec12SetHeavyRowsEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec13AllocateInputEv
#define _ZN8cataylor8wirehair5Codec13AllocateInputEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec13AllocateInputEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec13FreeWorkspaceEv
#define _ZN8cataylor8wirehair5Codec13FreeWorkspaceEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec13FreeWorkspaceEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec13GreedyPeelingEv
#define _ZN8cataylor8wirehair5Codec13GreedyPeelingEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec13GreedyPeelingEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec13PeelAvalancheEt
#define _ZN8cataylor8wirehair5Codec13PeelAvalancheEt __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec13PeelAvalancheEt)
#endif

#ifndef _ZN8cataylor8wirehair5Codec13SetupTriangleEv
#define _ZN8cataylor8wirehair5Codec13SetupTriangleEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec13SetupTriangleEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec14AllocateMatrixEv
#define _ZN8cataylor8wirehair5Codec14AllocateMatrixEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec14AllocateMatrixEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec14FixPeelFailureEPNS1_7PeelRowEt
#define _ZN8cataylor8wirehair5Codec14FixPeelFailureEPNS1_7PeelRowEt __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec14FixPeelFailureEPNS1_7PeelRowEt)
#endif

#ifndef _ZN8cataylor8wirehair5Codec15InsertHeavyRowsEv
#define _ZN8cataylor8wirehair5Codec15InsertHeavyRowsEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec15InsertHeavyRowsEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec16CopyDeferredRowsEv
#define _ZN8cataylor8wirehair5Codec16CopyDeferredRowsEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec16CopyDeferredRowsEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec16TriangleNonHeavyEv
#define _ZN8cataylor8wirehair5Codec16TriangleNonHeavyEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec16TriangleNonHeavyEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec17AllocateWorkspaceEv
#define _ZN8cataylor8wirehair5Codec17AllocateWorkspaceEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec17AllocateWorkspaceEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec17InitializeDecoderEii
#define _ZN8cataylor8wirehair5Codec17InitializeDecoderEii __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec17InitializeDecoderEii)
#endif

#ifndef _ZN8cataylor8wirehair5Codec17InitializeEncoderEii
#define _ZN8cataylor8wirehair5Codec17InitializeEncoderEii __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec17InitializeEncoderEii)
#endif

#ifndef _ZN8cataylor8wirehair5Codec17IsAllOriginalDataEv
#define _ZN8cataylor8wirehair5Codec17IsAllOriginalDataEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec17IsAllOriginalDataEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec17MultiplyDenseRowsEv
#define _ZN8cataylor8wirehair5Codec17MultiplyDenseRowsEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec17MultiplyDenseRowsEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec17ReconstructOutputEPv
#define _ZN8cataylor8wirehair5Codec17ReconstructOutputEPv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec17ReconstructOutputEPv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec17ResumeSolveMatrixEjPKv
#define _ZN8cataylor8wirehair5Codec17ResumeSolveMatrixEjPKv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec17ResumeSolveMatrixEjPKv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec18SetDeferredColumnsEv
#define _ZN8cataylor8wirehair5Codec18SetDeferredColumnsEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec18SetDeferredColumnsEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec19MultiplyDenseValuesEv
#define _ZN8cataylor8wirehair5Codec19MultiplyDenseValuesEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec19MultiplyDenseValuesEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec20AddSubdiagonalValuesEv
#define _ZN8cataylor8wirehair5Codec20AddSubdiagonalValuesEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec20AddSubdiagonalValuesEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec20OpportunisticPeelingEjj
#define _ZN8cataylor8wirehair5Codec20OpportunisticPeelingEjj __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec20OpportunisticPeelingEjj)
#endif

#ifndef _ZN8cataylor8wirehair5Codec22GenerateRecoveryBlocksEv
#define _ZN8cataylor8wirehair5Codec22GenerateRecoveryBlocksEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec22GenerateRecoveryBlocksEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec22InitializeColumnValuesEv
#define _ZN8cataylor8wirehair5Codec22InitializeColumnValuesEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec22InitializeColumnValuesEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec27BackSubstituteAboveDiagonalEv
#define _ZN8cataylor8wirehair5Codec27BackSubstituteAboveDiagonalEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec27BackSubstituteAboveDiagonalEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec31SetMixingColumnsForDeferredRowsEv
#define _ZN8cataylor8wirehair5Codec31SetMixingColumnsForDeferredRowsEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec31SetMixingColumnsForDeferredRowsEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec4PeelEtPNS1_7PeelRowEt
#define _ZN8cataylor8wirehair5Codec4PeelEtPNS1_7PeelRowEt __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec4PeelEtPNS1_7PeelRowEt)
#endif

#ifndef _ZN8cataylor8wirehair5Codec6EncodeEjPv
#define _ZN8cataylor8wirehair5Codec6EncodeEjPv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec6EncodeEjPv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec8SetInputEPKv
#define _ZN8cataylor8wirehair5Codec8SetInputEPKv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec8SetInputEPKv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec8TriangleEv
#define _ZN8cataylor8wirehair5Codec8TriangleEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec8TriangleEv)
#endif

#ifndef _ZN8cataylor8wirehair5Codec9FreeInputEv
#define _ZN8cataylor8wirehair5Codec9FreeInputEv __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5Codec9FreeInputEv)
#endif

#ifndef _ZN8cataylor8wirehair5CodecC1Ev
#define _ZN8cataylor8wirehair5CodecC1Ev __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5CodecC1Ev)
#endif

#ifndef _ZN8cataylor8wirehair5CodecC2Ev
#define _ZN8cataylor8wirehair5CodecC2Ev __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5CodecC2Ev)
#endif

#ifndef _ZN8cataylor8wirehair5CodecD1Ev
#define _ZN8cataylor8wirehair5CodecD1Ev __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5CodecD1Ev)
#endif

#ifndef _ZN8cataylor8wirehair5CodecD2Ev
#define _ZN8cataylor8wirehair5CodecD2Ev __NS_SYMBOL_VXL(_ZN8cataylor8wirehair5CodecD2Ev)
#endif

#ifndef _base64_char_value
#define _base64_char_value __NS_SYMBOL_VXL(_base64_char_value)
#endif

#ifndef _base64_decode_triple
#define _base64_decode_triple __NS_SYMBOL_VXL(_base64_decode_triple)
#endif

#ifndef _base64_encode_triple
#define _base64_encode_triple __NS_SYMBOL_VXL(_base64_encode_triple)
#endif

#ifndef _celt_autocorr
#define _celt_autocorr __NS_SYMBOL_VXL(_celt_autocorr)
#endif

#ifndef _celt_lpc
#define _celt_lpc __NS_SYMBOL_VXL(_celt_lpc)
#endif

#ifndef _libwsclient_read
#define _libwsclient_read __NS_SYMBOL_VXL(_libwsclient_read)
#endif

#ifndef _libwsclient_write
#define _libwsclient_write __NS_SYMBOL_VXL(_libwsclient_write)
#endif

#ifndef alg_quant
#define alg_quant __NS_SYMBOL_VXL(alg_quant)
#endif

#ifndef alg_unquant
#define alg_unquant __NS_SYMBOL_VXL(alg_unquant)
#endif

#ifndef amp2Log2
#define amp2Log2 __NS_SYMBOL_VXL(amp2Log2)
#endif

#ifndef anti_collapse
#define anti_collapse __NS_SYMBOL_VXL(anti_collapse)
#endif

#ifndef av_add_index_entry
#define av_add_index_entry __NS_SYMBOL_VXL(av_add_index_entry)
#endif

#ifndef av_add_q
#define av_add_q __NS_SYMBOL_VXL(av_add_q)
#endif

#ifndef av_adler32_update
#define av_adler32_update __NS_SYMBOL_VXL(av_adler32_update)
#endif

#ifndef av_aes_alloc
#define av_aes_alloc __NS_SYMBOL_VXL(av_aes_alloc)
#endif

#ifndef av_aes_crypt
#define av_aes_crypt __NS_SYMBOL_VXL(av_aes_crypt)
#endif

#ifndef av_aes_init
#define av_aes_init __NS_SYMBOL_VXL(av_aes_init)
#endif

#ifndef av_append_packet
#define av_append_packet __NS_SYMBOL_VXL(av_append_packet)
#endif

#ifndef av_asprintf
#define av_asprintf __NS_SYMBOL_VXL(av_asprintf)
#endif

#ifndef av_audio_fifo_alloc
#define av_audio_fifo_alloc __NS_SYMBOL_VXL(av_audio_fifo_alloc)
#endif

#ifndef av_audio_fifo_drain
#define av_audio_fifo_drain __NS_SYMBOL_VXL(av_audio_fifo_drain)
#endif

#ifndef av_audio_fifo_free
#define av_audio_fifo_free __NS_SYMBOL_VXL(av_audio_fifo_free)
#endif

#ifndef av_audio_fifo_read
#define av_audio_fifo_read __NS_SYMBOL_VXL(av_audio_fifo_read)
#endif

#ifndef av_audio_fifo_realloc
#define av_audio_fifo_realloc __NS_SYMBOL_VXL(av_audio_fifo_realloc)
#endif

#ifndef av_audio_fifo_reset
#define av_audio_fifo_reset __NS_SYMBOL_VXL(av_audio_fifo_reset)
#endif

#ifndef av_audio_fifo_size
#define av_audio_fifo_size __NS_SYMBOL_VXL(av_audio_fifo_size)
#endif

#ifndef av_audio_fifo_space
#define av_audio_fifo_space __NS_SYMBOL_VXL(av_audio_fifo_space)
#endif

#ifndef av_audio_fifo_write
#define av_audio_fifo_write __NS_SYMBOL_VXL(av_audio_fifo_write)
#endif

#ifndef av_base64_decode
#define av_base64_decode __NS_SYMBOL_VXL(av_base64_decode)
#endif

#ifndef av_base64_encode
#define av_base64_encode __NS_SYMBOL_VXL(av_base64_encode)
#endif

#ifndef av_basename
#define av_basename __NS_SYMBOL_VXL(av_basename)
#endif

#ifndef av_blowfish_crypt
#define av_blowfish_crypt __NS_SYMBOL_VXL(av_blowfish_crypt)
#endif

#ifndef av_blowfish_crypt_ecb
#define av_blowfish_crypt_ecb __NS_SYMBOL_VXL(av_blowfish_crypt_ecb)
#endif

#ifndef av_blowfish_init
#define av_blowfish_init __NS_SYMBOL_VXL(av_blowfish_init)
#endif

#ifndef av_bmg_get
#define av_bmg_get __NS_SYMBOL_VXL(av_bmg_get)
#endif

#ifndef av_bprint_channel_layout
#define av_bprint_channel_layout __NS_SYMBOL_VXL(av_bprint_channel_layout)
#endif

#ifndef av_bprint_chars
#define av_bprint_chars __NS_SYMBOL_VXL(av_bprint_chars)
#endif

#ifndef av_bprint_clear
#define av_bprint_clear __NS_SYMBOL_VXL(av_bprint_clear)
#endif

#ifndef av_bprint_escape
#define av_bprint_escape __NS_SYMBOL_VXL(av_bprint_escape)
#endif

#ifndef av_bprint_finalize
#define av_bprint_finalize __NS_SYMBOL_VXL(av_bprint_finalize)
#endif

#ifndef av_bprint_get_buffer
#define av_bprint_get_buffer __NS_SYMBOL_VXL(av_bprint_get_buffer)
#endif

#ifndef av_bprint_init
#define av_bprint_init __NS_SYMBOL_VXL(av_bprint_init)
#endif

#ifndef av_bprint_init_for_buffer
#define av_bprint_init_for_buffer __NS_SYMBOL_VXL(av_bprint_init_for_buffer)
#endif

#ifndef av_bprint_strftime
#define av_bprint_strftime __NS_SYMBOL_VXL(av_bprint_strftime)
#endif

#ifndef av_bprintf
#define av_bprintf __NS_SYMBOL_VXL(av_bprintf)
#endif

#ifndef av_calloc
#define av_calloc __NS_SYMBOL_VXL(av_calloc)
#endif

#ifndef av_channel_layout_extract_channel
#define av_channel_layout_extract_channel __NS_SYMBOL_VXL(av_channel_layout_extract_channel)
#endif

#ifndef av_close_input_file
#define av_close_input_file __NS_SYMBOL_VXL(av_close_input_file)
#endif

#ifndef av_codec_get_codec_descriptor
#define av_codec_get_codec_descriptor __NS_SYMBOL_VXL(av_codec_get_codec_descriptor)
#endif

#ifndef av_codec_get_id
#define av_codec_get_id __NS_SYMBOL_VXL(av_codec_get_id)
#endif

#ifndef av_codec_get_tag
#define av_codec_get_tag __NS_SYMBOL_VXL(av_codec_get_tag)
#endif

#ifndef av_codec_get_tag2
#define av_codec_get_tag2 __NS_SYMBOL_VXL(av_codec_get_tag2)
#endif

#ifndef av_codec_next
#define av_codec_next __NS_SYMBOL_VXL(av_codec_next)
#endif

#ifndef av_codec_set_codec_descriptor
#define av_codec_set_codec_descriptor __NS_SYMBOL_VXL(av_codec_set_codec_descriptor)
#endif

#ifndef av_codec_set_pkt_timebase
#define av_codec_set_pkt_timebase __NS_SYMBOL_VXL(av_codec_set_pkt_timebase)
#endif

#ifndef av_compare_mod
#define av_compare_mod __NS_SYMBOL_VXL(av_compare_mod)
#endif

#ifndef av_compare_ts
#define av_compare_ts __NS_SYMBOL_VXL(av_compare_ts)
#endif

#ifndef av_crc
#define av_crc __NS_SYMBOL_VXL(av_crc)
#endif

#ifndef av_crc_get_table
#define av_crc_get_table __NS_SYMBOL_VXL(av_crc_get_table)
#endif

#ifndef av_crc_init
#define av_crc_init __NS_SYMBOL_VXL(av_crc_init)
#endif

#ifndef av_ctz
#define av_ctz __NS_SYMBOL_VXL(av_ctz)
#endif

#ifndef av_d2q
#define av_d2q __NS_SYMBOL_VXL(av_d2q)
#endif

#ifndef av_d2str
#define av_d2str __NS_SYMBOL_VXL(av_d2str)
#endif

#ifndef av_dbl2ext
#define av_dbl2ext __NS_SYMBOL_VXL(av_dbl2ext)
#endif

#ifndef av_dbl2int
#define av_dbl2int __NS_SYMBOL_VXL(av_dbl2int)
#endif

#ifndef av_default_get_category
#define av_default_get_category __NS_SYMBOL_VXL(av_default_get_category)
#endif

#ifndef av_default_item_name
#define av_default_item_name __NS_SYMBOL_VXL(av_default_item_name)
#endif

#ifndef av_demuxer_open
#define av_demuxer_open __NS_SYMBOL_VXL(av_demuxer_open)
#endif

#ifndef av_des_crypt
#define av_des_crypt __NS_SYMBOL_VXL(av_des_crypt)
#endif

#ifndef av_des_init
#define av_des_init __NS_SYMBOL_VXL(av_des_init)
#endif

#ifndef av_des_mac
#define av_des_mac __NS_SYMBOL_VXL(av_des_mac)
#endif

#ifndef av_destruct_packet
#define av_destruct_packet __NS_SYMBOL_VXL(av_destruct_packet)
#endif

#ifndef av_dict_copy
#define av_dict_copy __NS_SYMBOL_VXL(av_dict_copy)
#endif

#ifndef av_dict_count
#define av_dict_count __NS_SYMBOL_VXL(av_dict_count)
#endif

#ifndef av_dict_free
#define av_dict_free __NS_SYMBOL_VXL(av_dict_free)
#endif

#ifndef av_dict_get
#define av_dict_get __NS_SYMBOL_VXL(av_dict_get)
#endif

#ifndef av_dict_parse_string
#define av_dict_parse_string __NS_SYMBOL_VXL(av_dict_parse_string)
#endif

#ifndef av_dict_set
#define av_dict_set __NS_SYMBOL_VXL(av_dict_set)
#endif

#ifndef av_dirname
#define av_dirname __NS_SYMBOL_VXL(av_dirname)
#endif

#ifndef av_div_q
#define av_div_q __NS_SYMBOL_VXL(av_div_q)
#endif

#ifndef av_dump_format
#define av_dump_format __NS_SYMBOL_VXL(av_dump_format)
#endif

#ifndef av_dup_packet
#define av_dup_packet __NS_SYMBOL_VXL(av_dup_packet)
#endif

#ifndef av_dynarray_add
#define av_dynarray_add __NS_SYMBOL_VXL(av_dynarray_add)
#endif

#ifndef av_escape
#define av_escape __NS_SYMBOL_VXL(av_escape)
#endif

#ifndef av_evaluate_lls
#define av_evaluate_lls __NS_SYMBOL_VXL(av_evaluate_lls)
#endif

#ifndef av_expr_eval
#define av_expr_eval __NS_SYMBOL_VXL(av_expr_eval)
#endif

#ifndef av_expr_free
#define av_expr_free __NS_SYMBOL_VXL(av_expr_free)
#endif

#ifndef av_expr_parse
#define av_expr_parse __NS_SYMBOL_VXL(av_expr_parse)
#endif

#ifndef av_expr_parse_and_eval
#define av_expr_parse_and_eval __NS_SYMBOL_VXL(av_expr_parse_and_eval)
#endif

#ifndef av_ext2dbl
#define av_ext2dbl __NS_SYMBOL_VXL(av_ext2dbl)
#endif

#ifndef av_fast_realloc
#define av_fast_realloc __NS_SYMBOL_VXL(av_fast_realloc)
#endif

#ifndef av_fifo_alloc
#define av_fifo_alloc __NS_SYMBOL_VXL(av_fifo_alloc)
#endif

#ifndef av_fifo_drain
#define av_fifo_drain __NS_SYMBOL_VXL(av_fifo_drain)
#endif

#ifndef av_fifo_free
#define av_fifo_free __NS_SYMBOL_VXL(av_fifo_free)
#endif

#ifndef av_fifo_generic_read
#define av_fifo_generic_read __NS_SYMBOL_VXL(av_fifo_generic_read)
#endif

#ifndef av_fifo_generic_write
#define av_fifo_generic_write __NS_SYMBOL_VXL(av_fifo_generic_write)
#endif

#ifndef av_fifo_grow
#define av_fifo_grow __NS_SYMBOL_VXL(av_fifo_grow)
#endif

#ifndef av_fifo_realloc2
#define av_fifo_realloc2 __NS_SYMBOL_VXL(av_fifo_realloc2)
#endif

#ifndef av_fifo_reset
#define av_fifo_reset __NS_SYMBOL_VXL(av_fifo_reset)
#endif

#ifndef av_fifo_size
#define av_fifo_size __NS_SYMBOL_VXL(av_fifo_size)
#endif

#ifndef av_fifo_space
#define av_fifo_space __NS_SYMBOL_VXL(av_fifo_space)
#endif

#ifndef av_file_map
#define av_file_map __NS_SYMBOL_VXL(av_file_map)
#endif

#ifndef av_file_unmap
#define av_file_unmap __NS_SYMBOL_VXL(av_file_unmap)
#endif

#ifndef av_filename_number_test
#define av_filename_number_test __NS_SYMBOL_VXL(av_filename_number_test)
#endif

#ifndef av_find_best_stream
#define av_find_best_stream __NS_SYMBOL_VXL(av_find_best_stream)
#endif

#ifndef av_find_default_stream_index
#define av_find_default_stream_index __NS_SYMBOL_VXL(av_find_default_stream_index)
#endif

#ifndef av_find_info_tag
#define av_find_info_tag __NS_SYMBOL_VXL(av_find_info_tag)
#endif

#ifndef av_find_input_format
#define av_find_input_format __NS_SYMBOL_VXL(av_find_input_format)
#endif

#ifndef av_find_nearest_q_idx
#define av_find_nearest_q_idx __NS_SYMBOL_VXL(av_find_nearest_q_idx)
#endif

#ifndef av_find_opt
#define av_find_opt __NS_SYMBOL_VXL(av_find_opt)
#endif

#ifndef av_find_program_from_stream
#define av_find_program_from_stream __NS_SYMBOL_VXL(av_find_program_from_stream)
#endif

#ifndef av_find_stream_info
#define av_find_stream_info __NS_SYMBOL_VXL(av_find_stream_info)
#endif

#ifndef av_flt2int
#define av_flt2int __NS_SYMBOL_VXL(av_flt2int)
#endif

#ifndef av_fmt_ctx_get_duration_estimation_method
#define av_fmt_ctx_get_duration_estimation_method __NS_SYMBOL_VXL(av_fmt_ctx_get_duration_estimation_method)
#endif

#ifndef av_force_cpu_flags
#define av_force_cpu_flags __NS_SYMBOL_VXL(av_force_cpu_flags)
#endif

#ifndef av_free
#define av_free __NS_SYMBOL_VXL(av_free)
#endif

#ifndef av_free_packet
#define av_free_packet __NS_SYMBOL_VXL(av_free_packet)
#endif

#ifndef av_freep
#define av_freep __NS_SYMBOL_VXL(av_freep)
#endif

#ifndef av_gcd
#define av_gcd __NS_SYMBOL_VXL(av_gcd)
#endif

#ifndef av_get_alt_sample_fmt
#define av_get_alt_sample_fmt __NS_SYMBOL_VXL(av_get_alt_sample_fmt)
#endif

#ifndef av_get_audio_frame_duration
#define av_get_audio_frame_duration __NS_SYMBOL_VXL(av_get_audio_frame_duration)
#endif

#ifndef av_get_bits_per_pixel
#define av_get_bits_per_pixel __NS_SYMBOL_VXL(av_get_bits_per_pixel)
#endif

#ifndef av_get_bits_per_sample
#define av_get_bits_per_sample __NS_SYMBOL_VXL(av_get_bits_per_sample)
#endif

#ifndef av_get_bits_per_sample_fmt
#define av_get_bits_per_sample_fmt __NS_SYMBOL_VXL(av_get_bits_per_sample_fmt)
#endif

#ifndef av_get_bytes_per_sample
#define av_get_bytes_per_sample __NS_SYMBOL_VXL(av_get_bytes_per_sample)
#endif

#ifndef av_get_channel_description
#define av_get_channel_description __NS_SYMBOL_VXL(av_get_channel_description)
#endif

#ifndef av_get_channel_layout
#define av_get_channel_layout __NS_SYMBOL_VXL(av_get_channel_layout)
#endif

#ifndef av_get_channel_layout_channel_index
#define av_get_channel_layout_channel_index __NS_SYMBOL_VXL(av_get_channel_layout_channel_index)
#endif

#ifndef av_get_channel_layout_nb_channels
#define av_get_channel_layout_nb_channels __NS_SYMBOL_VXL(av_get_channel_layout_nb_channels)
#endif

#ifndef av_get_channel_layout_string
#define av_get_channel_layout_string __NS_SYMBOL_VXL(av_get_channel_layout_string)
#endif

#ifndef av_get_channel_name
#define av_get_channel_name __NS_SYMBOL_VXL(av_get_channel_name)
#endif

#ifndef av_get_cpu_flags
#define av_get_cpu_flags __NS_SYMBOL_VXL(av_get_cpu_flags)
#endif

#ifndef av_get_default_channel_layout
#define av_get_default_channel_layout __NS_SYMBOL_VXL(av_get_default_channel_layout)
#endif

#ifndef av_get_double
#define av_get_double __NS_SYMBOL_VXL(av_get_double)
#endif

#ifndef av_get_frame_filename
#define av_get_frame_filename __NS_SYMBOL_VXL(av_get_frame_filename)
#endif

#ifndef av_get_int
#define av_get_int __NS_SYMBOL_VXL(av_get_int)
#endif

#ifndef av_get_media_type_string
#define av_get_media_type_string __NS_SYMBOL_VXL(av_get_media_type_string)
#endif

#ifndef av_get_packed_sample_fmt
#define av_get_packed_sample_fmt __NS_SYMBOL_VXL(av_get_packed_sample_fmt)
#endif

#ifndef av_get_packet
#define av_get_packet __NS_SYMBOL_VXL(av_get_packet)
#endif

#ifndef av_get_padded_bits_per_pixel
#define av_get_padded_bits_per_pixel __NS_SYMBOL_VXL(av_get_padded_bits_per_pixel)
#endif

#ifndef av_get_picture_type_char
#define av_get_picture_type_char __NS_SYMBOL_VXL(av_get_picture_type_char)
#endif

#ifndef av_get_pix_fmt
#define av_get_pix_fmt __NS_SYMBOL_VXL(av_get_pix_fmt)
#endif

#ifndef av_get_pix_fmt_name
#define av_get_pix_fmt_name __NS_SYMBOL_VXL(av_get_pix_fmt_name)
#endif

#ifndef av_get_pix_fmt_string
#define av_get_pix_fmt_string __NS_SYMBOL_VXL(av_get_pix_fmt_string)
#endif

#ifndef av_get_planar_sample_fmt
#define av_get_planar_sample_fmt __NS_SYMBOL_VXL(av_get_planar_sample_fmt)
#endif

#ifndef av_get_q
#define av_get_q __NS_SYMBOL_VXL(av_get_q)
#endif

#ifndef av_get_random_seed
#define av_get_random_seed __NS_SYMBOL_VXL(av_get_random_seed)
#endif

#ifndef av_get_sample_fmt
#define av_get_sample_fmt __NS_SYMBOL_VXL(av_get_sample_fmt)
#endif

#ifndef av_get_sample_fmt_name
#define av_get_sample_fmt_name __NS_SYMBOL_VXL(av_get_sample_fmt_name)
#endif

#ifndef av_get_sample_fmt_string
#define av_get_sample_fmt_string __NS_SYMBOL_VXL(av_get_sample_fmt_string)
#endif

#ifndef av_get_standard_channel_layout
#define av_get_standard_channel_layout __NS_SYMBOL_VXL(av_get_standard_channel_layout)
#endif

#ifndef av_get_string
#define av_get_string __NS_SYMBOL_VXL(av_get_string)
#endif

#ifndef av_get_token
#define av_get_token __NS_SYMBOL_VXL(av_get_token)
#endif

#ifndef av_gettime
#define av_gettime __NS_SYMBOL_VXL(av_gettime)
#endif

#ifndef av_grow_packet
#define av_grow_packet __NS_SYMBOL_VXL(av_grow_packet)
#endif

#ifndef av_guess_codec
#define av_guess_codec __NS_SYMBOL_VXL(av_guess_codec)
#endif

#ifndef av_guess_format
#define av_guess_format __NS_SYMBOL_VXL(av_guess_format)
#endif

#ifndef av_guess_sample_aspect_ratio
#define av_guess_sample_aspect_ratio __NS_SYMBOL_VXL(av_guess_sample_aspect_ratio)
#endif

#ifndef av_hex_dump
#define av_hex_dump __NS_SYMBOL_VXL(av_hex_dump)
#endif

#ifndef av_hex_dump_log
#define av_hex_dump_log __NS_SYMBOL_VXL(av_hex_dump_log)
#endif

#ifndef av_hmac_alloc
#define av_hmac_alloc __NS_SYMBOL_VXL(av_hmac_alloc)
#endif

#ifndef av_hmac_calc
#define av_hmac_calc __NS_SYMBOL_VXL(av_hmac_calc)
#endif

#ifndef av_hmac_final
#define av_hmac_final __NS_SYMBOL_VXL(av_hmac_final)
#endif

#ifndef av_hmac_free
#define av_hmac_free __NS_SYMBOL_VXL(av_hmac_free)
#endif

#ifndef av_hmac_init
#define av_hmac_init __NS_SYMBOL_VXL(av_hmac_init)
#endif

#ifndef av_hmac_update
#define av_hmac_update __NS_SYMBOL_VXL(av_hmac_update)
#endif

#ifndef av_iformat_next
#define av_iformat_next __NS_SYMBOL_VXL(av_iformat_next)
#endif

#ifndef av_image_alloc
#define av_image_alloc __NS_SYMBOL_VXL(av_image_alloc)
#endif

#ifndef av_image_check_size
#define av_image_check_size __NS_SYMBOL_VXL(av_image_check_size)
#endif

#ifndef av_image_copy
#define av_image_copy __NS_SYMBOL_VXL(av_image_copy)
#endif

#ifndef av_image_copy_plane
#define av_image_copy_plane __NS_SYMBOL_VXL(av_image_copy_plane)
#endif

#ifndef av_image_copy_to_buffer
#define av_image_copy_to_buffer __NS_SYMBOL_VXL(av_image_copy_to_buffer)
#endif

#ifndef av_image_fill_arrays
#define av_image_fill_arrays __NS_SYMBOL_VXL(av_image_fill_arrays)
#endif

#ifndef av_image_fill_linesizes
#define av_image_fill_linesizes __NS_SYMBOL_VXL(av_image_fill_linesizes)
#endif

#ifndef av_image_fill_max_pixsteps
#define av_image_fill_max_pixsteps __NS_SYMBOL_VXL(av_image_fill_max_pixsteps)
#endif

#ifndef av_image_fill_pointers
#define av_image_fill_pointers __NS_SYMBOL_VXL(av_image_fill_pointers)
#endif

#ifndef av_image_get_buffer_size
#define av_image_get_buffer_size __NS_SYMBOL_VXL(av_image_get_buffer_size)
#endif

#ifndef av_image_get_linesize
#define av_image_get_linesize __NS_SYMBOL_VXL(av_image_get_linesize)
#endif

#ifndef av_index_search_timestamp
#define av_index_search_timestamp __NS_SYMBOL_VXL(av_index_search_timestamp)
#endif

#ifndef av_init_lls
#define av_init_lls __NS_SYMBOL_VXL(av_init_lls)
#endif

#ifndef av_init_packet
#define av_init_packet __NS_SYMBOL_VXL(av_init_packet)
#endif

#ifndef av_int2dbl
#define av_int2dbl __NS_SYMBOL_VXL(av_int2dbl)
#endif

#ifndef av_int2flt
#define av_int2flt __NS_SYMBOL_VXL(av_int2flt)
#endif

#ifndef av_lfg_init
#define av_lfg_init __NS_SYMBOL_VXL(av_lfg_init)
#endif

#ifndef av_log
#define av_log __NS_SYMBOL_VXL(av_log)
#endif

#ifndef av_log2
#define av_log2 __NS_SYMBOL_VXL(av_log2)
#endif

#ifndef av_log2_16bit
#define av_log2_16bit __NS_SYMBOL_VXL(av_log2_16bit)
#endif

#ifndef av_log_default_callback
#define av_log_default_callback __NS_SYMBOL_VXL(av_log_default_callback)
#endif

#ifndef av_log_format_line
#define av_log_format_line __NS_SYMBOL_VXL(av_log_format_line)
#endif

#ifndef av_log_get_level
#define av_log_get_level __NS_SYMBOL_VXL(av_log_get_level)
#endif

#ifndef av_log_set_callback
#define av_log_set_callback __NS_SYMBOL_VXL(av_log_set_callback)
#endif

#ifndef av_log_set_flags
#define av_log_set_flags __NS_SYMBOL_VXL(av_log_set_flags)
#endif

#ifndef av_log_set_level
#define av_log_set_level __NS_SYMBOL_VXL(av_log_set_level)
#endif

#ifndef av_malloc
#define av_malloc __NS_SYMBOL_VXL(av_malloc)
#endif

#ifndef av_mallocz
#define av_mallocz __NS_SYMBOL_VXL(av_mallocz)
#endif

#ifndef av_match_ext
#define av_match_ext __NS_SYMBOL_VXL(av_match_ext)
#endif

#ifndef av_max_alloc
#define av_max_alloc __NS_SYMBOL_VXL(av_max_alloc)
#endif

#ifndef av_md5_alloc
#define av_md5_alloc __NS_SYMBOL_VXL(av_md5_alloc)
#endif

#ifndef av_md5_final
#define av_md5_final __NS_SYMBOL_VXL(av_md5_final)
#endif

#ifndef av_md5_init
#define av_md5_init __NS_SYMBOL_VXL(av_md5_init)
#endif

#ifndef av_md5_sum
#define av_md5_sum __NS_SYMBOL_VXL(av_md5_sum)
#endif

#ifndef av_md5_update
#define av_md5_update __NS_SYMBOL_VXL(av_md5_update)
#endif

#ifndef av_memcpy_backptr
#define av_memcpy_backptr __NS_SYMBOL_VXL(av_memcpy_backptr)
#endif

#ifndef av_mul_q
#define av_mul_q __NS_SYMBOL_VXL(av_mul_q)
#endif

#ifndef av_nearer_q
#define av_nearer_q __NS_SYMBOL_VXL(av_nearer_q)
#endif

#ifndef av_new_packet
#define av_new_packet __NS_SYMBOL_VXL(av_new_packet)
#endif

#ifndef av_new_program
#define av_new_program __NS_SYMBOL_VXL(av_new_program)
#endif

#ifndef av_new_stream
#define av_new_stream __NS_SYMBOL_VXL(av_new_stream)
#endif

#ifndef av_next_option
#define av_next_option __NS_SYMBOL_VXL(av_next_option)
#endif

#ifndef av_oformat_next
#define av_oformat_next __NS_SYMBOL_VXL(av_oformat_next)
#endif

#ifndef av_opt_child_class_next
#define av_opt_child_class_next __NS_SYMBOL_VXL(av_opt_child_class_next)
#endif

#ifndef av_opt_child_next
#define av_opt_child_next __NS_SYMBOL_VXL(av_opt_child_next)
#endif

#ifndef av_opt_eval_double
#define av_opt_eval_double __NS_SYMBOL_VXL(av_opt_eval_double)
#endif

#ifndef av_opt_eval_flags
#define av_opt_eval_flags __NS_SYMBOL_VXL(av_opt_eval_flags)
#endif

#ifndef av_opt_eval_float
#define av_opt_eval_float __NS_SYMBOL_VXL(av_opt_eval_float)
#endif

#ifndef av_opt_eval_int
#define av_opt_eval_int __NS_SYMBOL_VXL(av_opt_eval_int)
#endif

#ifndef av_opt_eval_int64
#define av_opt_eval_int64 __NS_SYMBOL_VXL(av_opt_eval_int64)
#endif

#ifndef av_opt_eval_q
#define av_opt_eval_q __NS_SYMBOL_VXL(av_opt_eval_q)
#endif

#ifndef av_opt_find
#define av_opt_find __NS_SYMBOL_VXL(av_opt_find)
#endif

#ifndef av_opt_find2
#define av_opt_find2 __NS_SYMBOL_VXL(av_opt_find2)
#endif

#ifndef av_opt_flag_is_set
#define av_opt_flag_is_set __NS_SYMBOL_VXL(av_opt_flag_is_set)
#endif

#ifndef av_opt_free
#define av_opt_free __NS_SYMBOL_VXL(av_opt_free)
#endif

#ifndef av_opt_freep_ranges
#define av_opt_freep_ranges __NS_SYMBOL_VXL(av_opt_freep_ranges)
#endif

#ifndef av_opt_get
#define av_opt_get __NS_SYMBOL_VXL(av_opt_get)
#endif

#ifndef av_opt_get_double
#define av_opt_get_double __NS_SYMBOL_VXL(av_opt_get_double)
#endif

#ifndef av_opt_get_image_size
#define av_opt_get_image_size __NS_SYMBOL_VXL(av_opt_get_image_size)
#endif

#ifndef av_opt_get_int
#define av_opt_get_int __NS_SYMBOL_VXL(av_opt_get_int)
#endif

#ifndef av_opt_get_key_value
#define av_opt_get_key_value __NS_SYMBOL_VXL(av_opt_get_key_value)
#endif

#ifndef av_opt_get_pixel_fmt
#define av_opt_get_pixel_fmt __NS_SYMBOL_VXL(av_opt_get_pixel_fmt)
#endif

#ifndef av_opt_get_q
#define av_opt_get_q __NS_SYMBOL_VXL(av_opt_get_q)
#endif

#ifndef av_opt_get_sample_fmt
#define av_opt_get_sample_fmt __NS_SYMBOL_VXL(av_opt_get_sample_fmt)
#endif

#ifndef av_opt_next
#define av_opt_next __NS_SYMBOL_VXL(av_opt_next)
#endif

#ifndef av_opt_ptr
#define av_opt_ptr __NS_SYMBOL_VXL(av_opt_ptr)
#endif

#ifndef av_opt_query_ranges
#define av_opt_query_ranges __NS_SYMBOL_VXL(av_opt_query_ranges)
#endif

#ifndef av_opt_query_ranges_default
#define av_opt_query_ranges_default __NS_SYMBOL_VXL(av_opt_query_ranges_default)
#endif

#ifndef av_opt_set
#define av_opt_set __NS_SYMBOL_VXL(av_opt_set)
#endif

#ifndef av_opt_set_bin
#define av_opt_set_bin __NS_SYMBOL_VXL(av_opt_set_bin)
#endif

#ifndef av_opt_set_defaults
#define av_opt_set_defaults __NS_SYMBOL_VXL(av_opt_set_defaults)
#endif

#ifndef av_opt_set_defaults2
#define av_opt_set_defaults2 __NS_SYMBOL_VXL(av_opt_set_defaults2)
#endif

#ifndef av_opt_set_dict
#define av_opt_set_dict __NS_SYMBOL_VXL(av_opt_set_dict)
#endif

#ifndef av_opt_set_double
#define av_opt_set_double __NS_SYMBOL_VXL(av_opt_set_double)
#endif

#ifndef av_opt_set_from_string
#define av_opt_set_from_string __NS_SYMBOL_VXL(av_opt_set_from_string)
#endif

#ifndef av_opt_set_image_size
#define av_opt_set_image_size __NS_SYMBOL_VXL(av_opt_set_image_size)
#endif

#ifndef av_opt_set_int
#define av_opt_set_int __NS_SYMBOL_VXL(av_opt_set_int)
#endif

#ifndef av_opt_set_pixel_fmt
#define av_opt_set_pixel_fmt __NS_SYMBOL_VXL(av_opt_set_pixel_fmt)
#endif

#ifndef av_opt_set_q
#define av_opt_set_q __NS_SYMBOL_VXL(av_opt_set_q)
#endif

#ifndef av_opt_set_sample_fmt
#define av_opt_set_sample_fmt __NS_SYMBOL_VXL(av_opt_set_sample_fmt)
#endif

#ifndef av_opt_show2
#define av_opt_show2 __NS_SYMBOL_VXL(av_opt_show2)
#endif

#ifndef av_packet_merge_side_data
#define av_packet_merge_side_data __NS_SYMBOL_VXL(av_packet_merge_side_data)
#endif

#ifndef av_packet_new_side_data
#define av_packet_new_side_data __NS_SYMBOL_VXL(av_packet_new_side_data)
#endif

#ifndef av_parse_color
#define av_parse_color __NS_SYMBOL_VXL(av_parse_color)
#endif

#ifndef av_parse_cpu_caps
#define av_parse_cpu_caps __NS_SYMBOL_VXL(av_parse_cpu_caps)
#endif

#ifndef av_parse_cpu_flags
#define av_parse_cpu_flags __NS_SYMBOL_VXL(av_parse_cpu_flags)
#endif

#ifndef av_parse_ratio
#define av_parse_ratio __NS_SYMBOL_VXL(av_parse_ratio)
#endif

#ifndef av_parse_time
#define av_parse_time __NS_SYMBOL_VXL(av_parse_time)
#endif

#ifndef av_parse_video_rate
#define av_parse_video_rate __NS_SYMBOL_VXL(av_parse_video_rate)
#endif

#ifndef av_parse_video_size
#define av_parse_video_size __NS_SYMBOL_VXL(av_parse_video_size)
#endif

#ifndef av_parser_close
#define av_parser_close __NS_SYMBOL_VXL(av_parser_close)
#endif

#ifndef av_parser_init
#define av_parser_init __NS_SYMBOL_VXL(av_parser_init)
#endif

#ifndef av_parser_parse2
#define av_parser_parse2 __NS_SYMBOL_VXL(av_parser_parse2)
#endif

#ifndef av_pix_fmt_desc_get
#define av_pix_fmt_desc_get __NS_SYMBOL_VXL(av_pix_fmt_desc_get)
#endif

#ifndef av_pix_fmt_desc_get_id
#define av_pix_fmt_desc_get_id __NS_SYMBOL_VXL(av_pix_fmt_desc_get_id)
#endif

#ifndef av_pix_fmt_desc_next
#define av_pix_fmt_desc_next __NS_SYMBOL_VXL(av_pix_fmt_desc_next)
#endif

#ifndef av_pix_fmt_get_chroma_sub_sample
#define av_pix_fmt_get_chroma_sub_sample __NS_SYMBOL_VXL(av_pix_fmt_get_chroma_sub_sample)
#endif

#ifndef av_pkt_dump2
#define av_pkt_dump2 __NS_SYMBOL_VXL(av_pkt_dump2)
#endif

#ifndef av_pkt_dump_log2
#define av_pkt_dump_log2 __NS_SYMBOL_VXL(av_pkt_dump_log2)
#endif

#ifndef av_probe_input_buffer
#define av_probe_input_buffer __NS_SYMBOL_VXL(av_probe_input_buffer)
#endif

#ifndef av_probe_input_format
#define av_probe_input_format __NS_SYMBOL_VXL(av_probe_input_format)
#endif

#ifndef av_probe_input_format2
#define av_probe_input_format2 __NS_SYMBOL_VXL(av_probe_input_format2)
#endif

#ifndef av_probe_input_format3
#define av_probe_input_format3 __NS_SYMBOL_VXL(av_probe_input_format3)
#endif

#ifndef av_rc4_crypt
#define av_rc4_crypt __NS_SYMBOL_VXL(av_rc4_crypt)
#endif

#ifndef av_rc4_init
#define av_rc4_init __NS_SYMBOL_VXL(av_rc4_init)
#endif

#ifndef av_read_frame
#define av_read_frame __NS_SYMBOL_VXL(av_read_frame)
#endif

#ifndef av_read_image_line
#define av_read_image_line __NS_SYMBOL_VXL(av_read_image_line)
#endif

#ifndef av_read_packet
#define av_read_packet __NS_SYMBOL_VXL(av_read_packet)
#endif

#ifndef av_read_pause
#define av_read_pause __NS_SYMBOL_VXL(av_read_pause)
#endif

#ifndef av_read_play
#define av_read_play __NS_SYMBOL_VXL(av_read_play)
#endif

#ifndef av_realloc
#define av_realloc __NS_SYMBOL_VXL(av_realloc)
#endif

#ifndef av_realloc_f
#define av_realloc_f __NS_SYMBOL_VXL(av_realloc_f)
#endif

#ifndef av_reduce
#define av_reduce __NS_SYMBOL_VXL(av_reduce)
#endif

#ifndef av_register_all
#define av_register_all __NS_SYMBOL_VXL(av_register_all)
#endif

#ifndef av_register_input_format
#define av_register_input_format __NS_SYMBOL_VXL(av_register_input_format)
#endif

#ifndef av_register_output_format
#define av_register_output_format __NS_SYMBOL_VXL(av_register_output_format)
#endif

#ifndef av_register_rdt_dynamic_payload_handlers
#define av_register_rdt_dynamic_payload_handlers __NS_SYMBOL_VXL(av_register_rdt_dynamic_payload_handlers)
#endif

#ifndef av_register_rtp_dynamic_payload_handlers
#define av_register_rtp_dynamic_payload_handlers __NS_SYMBOL_VXL(av_register_rtp_dynamic_payload_handlers)
#endif

#ifndef av_rescale
#define av_rescale __NS_SYMBOL_VXL(av_rescale)
#endif

#ifndef av_rescale_delta
#define av_rescale_delta __NS_SYMBOL_VXL(av_rescale_delta)
#endif

#ifndef av_rescale_q
#define av_rescale_q __NS_SYMBOL_VXL(av_rescale_q)
#endif

#ifndef av_rescale_q_rnd
#define av_rescale_q_rnd __NS_SYMBOL_VXL(av_rescale_q_rnd)
#endif

#ifndef av_rescale_rnd
#define av_rescale_rnd __NS_SYMBOL_VXL(av_rescale_rnd)
#endif

#ifndef av_sample_fmt_is_planar
#define av_sample_fmt_is_planar __NS_SYMBOL_VXL(av_sample_fmt_is_planar)
#endif

#ifndef av_samples_alloc
#define av_samples_alloc __NS_SYMBOL_VXL(av_samples_alloc)
#endif

#ifndef av_samples_copy
#define av_samples_copy __NS_SYMBOL_VXL(av_samples_copy)
#endif

#ifndef av_samples_fill_arrays
#define av_samples_fill_arrays __NS_SYMBOL_VXL(av_samples_fill_arrays)
#endif

#ifndef av_samples_get_buffer_size
#define av_samples_get_buffer_size __NS_SYMBOL_VXL(av_samples_get_buffer_size)
#endif

#ifndef av_samples_set_silence
#define av_samples_set_silence __NS_SYMBOL_VXL(av_samples_set_silence)
#endif

#ifndef av_sdp_create
#define av_sdp_create __NS_SYMBOL_VXL(av_sdp_create)
#endif

#ifndef av_seek_frame
#define av_seek_frame __NS_SYMBOL_VXL(av_seek_frame)
#endif

#ifndef av_set_cpu_flags_mask
#define av_set_cpu_flags_mask __NS_SYMBOL_VXL(av_set_cpu_flags_mask)
#endif

#ifndef av_set_double
#define av_set_double __NS_SYMBOL_VXL(av_set_double)
#endif

#ifndef av_set_int
#define av_set_int __NS_SYMBOL_VXL(av_set_int)
#endif

#ifndef av_set_options_string
#define av_set_options_string __NS_SYMBOL_VXL(av_set_options_string)
#endif

#ifndef av_set_pts_info
#define av_set_pts_info __NS_SYMBOL_VXL(av_set_pts_info)
#endif

#ifndef av_set_q
#define av_set_q __NS_SYMBOL_VXL(av_set_q)
#endif

#ifndef av_set_string3
#define av_set_string3 __NS_SYMBOL_VXL(av_set_string3)
#endif

#ifndef av_sha_alloc
#define av_sha_alloc __NS_SYMBOL_VXL(av_sha_alloc)
#endif

#ifndef av_sha_final
#define av_sha_final __NS_SYMBOL_VXL(av_sha_final)
#endif

#ifndef av_sha_init
#define av_sha_init __NS_SYMBOL_VXL(av_sha_init)
#endif

#ifndef av_sha_update
#define av_sha_update __NS_SYMBOL_VXL(av_sha_update)
#endif

#ifndef av_shrink_packet
#define av_shrink_packet __NS_SYMBOL_VXL(av_shrink_packet)
#endif

#ifndef av_small_strptime
#define av_small_strptime __NS_SYMBOL_VXL(av_small_strptime)
#endif

#ifndef av_solve_lls
#define av_solve_lls __NS_SYMBOL_VXL(av_solve_lls)
#endif

#ifndef av_strcasecmp
#define av_strcasecmp __NS_SYMBOL_VXL(av_strcasecmp)
#endif

#ifndef av_strdup
#define av_strdup __NS_SYMBOL_VXL(av_strdup)
#endif

#ifndef av_strerror
#define av_strerror __NS_SYMBOL_VXL(av_strerror)
#endif

#ifndef av_stristart
#define av_stristart __NS_SYMBOL_VXL(av_stristart)
#endif

#ifndef av_stristr
#define av_stristr __NS_SYMBOL_VXL(av_stristr)
#endif

#ifndef av_strlcat
#define av_strlcat __NS_SYMBOL_VXL(av_strlcat)
#endif

#ifndef av_strlcatf
#define av_strlcatf __NS_SYMBOL_VXL(av_strlcatf)
#endif

#ifndef av_strlcpy
#define av_strlcpy __NS_SYMBOL_VXL(av_strlcpy)
#endif

#ifndef av_strncasecmp
#define av_strncasecmp __NS_SYMBOL_VXL(av_strncasecmp)
#endif

#ifndef av_strnstr
#define av_strnstr __NS_SYMBOL_VXL(av_strnstr)
#endif

#ifndef av_strstart
#define av_strstart __NS_SYMBOL_VXL(av_strstart)
#endif

#ifndef av_strtod
#define av_strtod __NS_SYMBOL_VXL(av_strtod)
#endif

#ifndef av_strtok
#define av_strtok __NS_SYMBOL_VXL(av_strtok)
#endif

#ifndef av_sub_q
#define av_sub_q __NS_SYMBOL_VXL(av_sub_q)
#endif

#ifndef av_tempfile
#define av_tempfile __NS_SYMBOL_VXL(av_tempfile)
#endif

#ifndef av_timecode_adjust_ntsc_framenum2
#define av_timecode_adjust_ntsc_framenum2 __NS_SYMBOL_VXL(av_timecode_adjust_ntsc_framenum2)
#endif

#ifndef av_timecode_check_frame_rate
#define av_timecode_check_frame_rate __NS_SYMBOL_VXL(av_timecode_check_frame_rate)
#endif

#ifndef av_timecode_get_smpte_from_framenum
#define av_timecode_get_smpte_from_framenum __NS_SYMBOL_VXL(av_timecode_get_smpte_from_framenum)
#endif

#ifndef av_timecode_init
#define av_timecode_init __NS_SYMBOL_VXL(av_timecode_init)
#endif

#ifndef av_timecode_init_from_string
#define av_timecode_init_from_string __NS_SYMBOL_VXL(av_timecode_init_from_string)
#endif

#ifndef av_timecode_make_mpeg_tc_string
#define av_timecode_make_mpeg_tc_string __NS_SYMBOL_VXL(av_timecode_make_mpeg_tc_string)
#endif

#ifndef av_timecode_make_smpte_tc_string
#define av_timecode_make_smpte_tc_string __NS_SYMBOL_VXL(av_timecode_make_smpte_tc_string)
#endif

#ifndef av_timecode_make_string
#define av_timecode_make_string __NS_SYMBOL_VXL(av_timecode_make_string)
#endif

#ifndef av_timegm
#define av_timegm __NS_SYMBOL_VXL(av_timegm)
#endif

#ifndef av_tree_destroy
#define av_tree_destroy __NS_SYMBOL_VXL(av_tree_destroy)
#endif

#ifndef av_tree_enumerate
#define av_tree_enumerate __NS_SYMBOL_VXL(av_tree_enumerate)
#endif

#ifndef av_tree_find
#define av_tree_find __NS_SYMBOL_VXL(av_tree_find)
#endif

#ifndef av_tree_insert
#define av_tree_insert __NS_SYMBOL_VXL(av_tree_insert)
#endif

#ifndef av_tree_node_alloc
#define av_tree_node_alloc __NS_SYMBOL_VXL(av_tree_node_alloc)
#endif

#ifndef av_update_lls
#define av_update_lls __NS_SYMBOL_VXL(av_update_lls)
#endif

#ifndef av_url_split
#define av_url_split __NS_SYMBOL_VXL(av_url_split)
#endif

#ifndef av_usleep
#define av_usleep __NS_SYMBOL_VXL(av_usleep)
#endif

#ifndef av_vlog
#define av_vlog __NS_SYMBOL_VXL(av_vlog)
#endif

#ifndef av_write_image_line
#define av_write_image_line __NS_SYMBOL_VXL(av_write_image_line)
#endif

#ifndef av_xtea_crypt
#define av_xtea_crypt __NS_SYMBOL_VXL(av_xtea_crypt)
#endif

#ifndef av_xtea_init
#define av_xtea_init __NS_SYMBOL_VXL(av_xtea_init)
#endif

#ifndef avcodec_alloc_context3
#define avcodec_alloc_context3 __NS_SYMBOL_VXL(avcodec_alloc_context3)
#endif

#ifndef avcodec_alloc_frame
#define avcodec_alloc_frame __NS_SYMBOL_VXL(avcodec_alloc_frame)
#endif

#ifndef avcodec_close
#define avcodec_close __NS_SYMBOL_VXL(avcodec_close)
#endif

#ifndef avcodec_decode_audio4
#define avcodec_decode_audio4 __NS_SYMBOL_VXL(avcodec_decode_audio4)
#endif

#ifndef avcodec_decode_subtitle2
#define avcodec_decode_subtitle2 __NS_SYMBOL_VXL(avcodec_decode_subtitle2)
#endif

#ifndef avcodec_decode_video2
#define avcodec_decode_video2 __NS_SYMBOL_VXL(avcodec_decode_video2)
#endif

#ifndef avcodec_descriptor_get
#define avcodec_descriptor_get __NS_SYMBOL_VXL(avcodec_descriptor_get)
#endif

#ifndef avcodec_find_decoder
#define avcodec_find_decoder __NS_SYMBOL_VXL(avcodec_find_decoder)
#endif

#ifndef avcodec_free_frame
#define avcodec_free_frame __NS_SYMBOL_VXL(avcodec_free_frame)
#endif

#ifndef avcodec_get_context_defaults3
#define avcodec_get_context_defaults3 __NS_SYMBOL_VXL(avcodec_get_context_defaults3)
#endif

#ifndef avcodec_get_frame_defaults
#define avcodec_get_frame_defaults __NS_SYMBOL_VXL(avcodec_get_frame_defaults)
#endif

#ifndef avcodec_get_name
#define avcodec_get_name __NS_SYMBOL_VXL(avcodec_get_name)
#endif

#ifndef avcodec_is_open
#define avcodec_is_open __NS_SYMBOL_VXL(avcodec_is_open)
#endif

#ifndef avcodec_open2
#define avcodec_open2 __NS_SYMBOL_VXL(avcodec_open2)
#endif

#ifndef avcodec_pix_fmt_to_codec_tag
#define avcodec_pix_fmt_to_codec_tag __NS_SYMBOL_VXL(avcodec_pix_fmt_to_codec_tag)
#endif

#ifndef avcodec_register
#define avcodec_register __NS_SYMBOL_VXL(avcodec_register)
#endif

#ifndef avcodec_register_all
#define avcodec_register_all __NS_SYMBOL_VXL(avcodec_register_all)
#endif

#ifndef avcodec_string
#define avcodec_string __NS_SYMBOL_VXL(avcodec_string)
#endif

#ifndef avformat_alloc_context
#define avformat_alloc_context __NS_SYMBOL_VXL(avformat_alloc_context)
#endif

#ifndef avformat_close_input
#define avformat_close_input __NS_SYMBOL_VXL(avformat_close_input)
#endif

#ifndef avformat_configuration
#define avformat_configuration __NS_SYMBOL_VXL(avformat_configuration)
#endif

#ifndef avformat_find_stream_info
#define avformat_find_stream_info __NS_SYMBOL_VXL(avformat_find_stream_info)
#endif

#ifndef avformat_free_context
#define avformat_free_context __NS_SYMBOL_VXL(avformat_free_context)
#endif

#ifndef avformat_get_class
#define avformat_get_class __NS_SYMBOL_VXL(avformat_get_class)
#endif

#ifndef avformat_license
#define avformat_license __NS_SYMBOL_VXL(avformat_license)
#endif

#ifndef avformat_match_stream_specifier
#define avformat_match_stream_specifier __NS_SYMBOL_VXL(avformat_match_stream_specifier)
#endif

#ifndef avformat_network_deinit
#define avformat_network_deinit __NS_SYMBOL_VXL(avformat_network_deinit)
#endif

#ifndef avformat_network_init
#define avformat_network_init __NS_SYMBOL_VXL(avformat_network_init)
#endif

#ifndef avformat_new_stream
#define avformat_new_stream __NS_SYMBOL_VXL(avformat_new_stream)
#endif

#ifndef avformat_open_input
#define avformat_open_input __NS_SYMBOL_VXL(avformat_open_input)
#endif

#ifndef avformat_query_codec
#define avformat_query_codec __NS_SYMBOL_VXL(avformat_query_codec)
#endif

#ifndef avformat_queue_attached_pictures
#define avformat_queue_attached_pictures __NS_SYMBOL_VXL(avformat_queue_attached_pictures)
#endif

#ifndef avformat_seek_file
#define avformat_seek_file __NS_SYMBOL_VXL(avformat_seek_file)
#endif

#ifndef avformat_version
#define avformat_version __NS_SYMBOL_VXL(avformat_version)
#endif

#ifndef avio_alloc_context
#define avio_alloc_context __NS_SYMBOL_VXL(avio_alloc_context)
#endif

#ifndef avio_check
#define avio_check __NS_SYMBOL_VXL(avio_check)
#endif

#ifndef avio_close
#define avio_close __NS_SYMBOL_VXL(avio_close)
#endif

#ifndef avio_close_dyn_buf
#define avio_close_dyn_buf __NS_SYMBOL_VXL(avio_close_dyn_buf)
#endif

#ifndef avio_closep
#define avio_closep __NS_SYMBOL_VXL(avio_closep)
#endif

#ifndef avio_enum_protocols
#define avio_enum_protocols __NS_SYMBOL_VXL(avio_enum_protocols)
#endif

#ifndef avio_flush
#define avio_flush __NS_SYMBOL_VXL(avio_flush)
#endif

#ifndef avio_get_str
#define avio_get_str __NS_SYMBOL_VXL(avio_get_str)
#endif

#ifndef avio_get_str16be
#define avio_get_str16be __NS_SYMBOL_VXL(avio_get_str16be)
#endif

#ifndef avio_get_str16le
#define avio_get_str16le __NS_SYMBOL_VXL(avio_get_str16le)
#endif

#ifndef avio_open
#define avio_open __NS_SYMBOL_VXL(avio_open)
#endif

#ifndef avio_open2
#define avio_open2 __NS_SYMBOL_VXL(avio_open2)
#endif

#ifndef avio_open_dyn_buf
#define avio_open_dyn_buf __NS_SYMBOL_VXL(avio_open_dyn_buf)
#endif

#ifndef avio_pause
#define avio_pause __NS_SYMBOL_VXL(avio_pause)
#endif

#ifndef avio_printf
#define avio_printf __NS_SYMBOL_VXL(avio_printf)
#endif

#ifndef avio_put_str
#define avio_put_str __NS_SYMBOL_VXL(avio_put_str)
#endif

#ifndef avio_put_str16le
#define avio_put_str16le __NS_SYMBOL_VXL(avio_put_str16le)
#endif

#ifndef avio_r8
#define avio_r8 __NS_SYMBOL_VXL(avio_r8)
#endif

#ifndef avio_rb16
#define avio_rb16 __NS_SYMBOL_VXL(avio_rb16)
#endif

#ifndef avio_rb24
#define avio_rb24 __NS_SYMBOL_VXL(avio_rb24)
#endif

#ifndef avio_rb32
#define avio_rb32 __NS_SYMBOL_VXL(avio_rb32)
#endif

#ifndef avio_rb64
#define avio_rb64 __NS_SYMBOL_VXL(avio_rb64)
#endif

#ifndef avio_read
#define avio_read __NS_SYMBOL_VXL(avio_read)
#endif

#ifndef avio_rl16
#define avio_rl16 __NS_SYMBOL_VXL(avio_rl16)
#endif

#ifndef avio_rl24
#define avio_rl24 __NS_SYMBOL_VXL(avio_rl24)
#endif

#ifndef avio_rl32
#define avio_rl32 __NS_SYMBOL_VXL(avio_rl32)
#endif

#ifndef avio_rl64
#define avio_rl64 __NS_SYMBOL_VXL(avio_rl64)
#endif

#ifndef avio_seek
#define avio_seek __NS_SYMBOL_VXL(avio_seek)
#endif

#ifndef avio_seek_time
#define avio_seek_time __NS_SYMBOL_VXL(avio_seek_time)
#endif

#ifndef avio_size
#define avio_size __NS_SYMBOL_VXL(avio_size)
#endif

#ifndef avio_skip
#define avio_skip __NS_SYMBOL_VXL(avio_skip)
#endif

#ifndef avio_w8
#define avio_w8 __NS_SYMBOL_VXL(avio_w8)
#endif

#ifndef avio_wb16
#define avio_wb16 __NS_SYMBOL_VXL(avio_wb16)
#endif

#ifndef avio_wb24
#define avio_wb24 __NS_SYMBOL_VXL(avio_wb24)
#endif

#ifndef avio_wb32
#define avio_wb32 __NS_SYMBOL_VXL(avio_wb32)
#endif

#ifndef avio_wb64
#define avio_wb64 __NS_SYMBOL_VXL(avio_wb64)
#endif

#ifndef avio_wl16
#define avio_wl16 __NS_SYMBOL_VXL(avio_wl16)
#endif

#ifndef avio_wl24
#define avio_wl24 __NS_SYMBOL_VXL(avio_wl24)
#endif

#ifndef avio_wl32
#define avio_wl32 __NS_SYMBOL_VXL(avio_wl32)
#endif

#ifndef avio_wl64
#define avio_wl64 __NS_SYMBOL_VXL(avio_wl64)
#endif

#ifndef avio_write
#define avio_write __NS_SYMBOL_VXL(avio_write)
#endif

#ifndef avpriv_emms_yasm
#define avpriv_emms_yasm __NS_SYMBOL_VXL(avpriv_emms_yasm)
#endif

#ifndef avpriv_evaluate_lls
#define avpriv_evaluate_lls __NS_SYMBOL_VXL(avpriv_evaluate_lls)
#endif

#ifndef avpriv_find_pix_fmt
#define avpriv_find_pix_fmt __NS_SYMBOL_VXL(avpriv_find_pix_fmt)
#endif

#ifndef avpriv_float_dsp_init
#define avpriv_float_dsp_init __NS_SYMBOL_VXL(avpriv_float_dsp_init)
#endif

#ifndef avpriv_h264_has_num_reorder_frames
#define avpriv_h264_has_num_reorder_frames __NS_SYMBOL_VXL(avpriv_h264_has_num_reorder_frames)
#endif

#ifndef avpriv_init_lls
#define avpriv_init_lls __NS_SYMBOL_VXL(avpriv_init_lls)
#endif

#ifndef avpriv_lock_avformat
#define avpriv_lock_avformat __NS_SYMBOL_VXL(avpriv_lock_avformat)
#endif

#ifndef avpriv_new_chapter
#define avpriv_new_chapter __NS_SYMBOL_VXL(avpriv_new_chapter)
#endif

#ifndef avpriv_scalarproduct_float_c
#define avpriv_scalarproduct_float_c __NS_SYMBOL_VXL(avpriv_scalarproduct_float_c)
#endif

#ifndef avpriv_set_pts_info
#define avpriv_set_pts_info __NS_SYMBOL_VXL(avpriv_set_pts_info)
#endif

#ifndef avpriv_set_systematic_pal2
#define avpriv_set_systematic_pal2 __NS_SYMBOL_VXL(avpriv_set_systematic_pal2)
#endif

#ifndef avpriv_solve_lls
#define avpriv_solve_lls __NS_SYMBOL_VXL(avpriv_solve_lls)
#endif

#ifndef avpriv_toupper4
#define avpriv_toupper4 __NS_SYMBOL_VXL(avpriv_toupper4)
#endif

#ifndef avpriv_unlock_avformat
#define avpriv_unlock_avformat __NS_SYMBOL_VXL(avpriv_unlock_avformat)
#endif

#ifndef avpriv_update_lls
#define avpriv_update_lls __NS_SYMBOL_VXL(avpriv_update_lls)
#endif

#ifndef avutil_configuration
#define avutil_configuration __NS_SYMBOL_VXL(avutil_configuration)
#endif

#ifndef avutil_license
#define avutil_license __NS_SYMBOL_VXL(avutil_license)
#endif

#ifndef avutil_version
#define avutil_version __NS_SYMBOL_VXL(avutil_version)
#endif

#ifndef base64_decode
#define base64_decode __NS_SYMBOL_VXL(base64_decode)
#endif

#ifndef base64_encode
#define base64_encode __NS_SYMBOL_VXL(base64_encode)
#endif

#ifndef celt_cos_norm
#define celt_cos_norm __NS_SYMBOL_VXL(celt_cos_norm)
#endif

#ifndef celt_decode_with_ec
#define celt_decode_with_ec __NS_SYMBOL_VXL(celt_decode_with_ec)
#endif

#ifndef celt_decoder_get_size
#define celt_decoder_get_size __NS_SYMBOL_VXL(celt_decoder_get_size)
#endif

#ifndef celt_decoder_init
#define celt_decoder_init __NS_SYMBOL_VXL(celt_decoder_init)
#endif

#ifndef celt_encode_with_ec
#define celt_encode_with_ec __NS_SYMBOL_VXL(celt_encode_with_ec)
#endif

#ifndef celt_encoder_get_size
#define celt_encoder_get_size __NS_SYMBOL_VXL(celt_encoder_get_size)
#endif

#ifndef celt_encoder_init
#define celt_encoder_init __NS_SYMBOL_VXL(celt_encoder_init)
#endif

#ifndef celt_fir
#define celt_fir __NS_SYMBOL_VXL(celt_fir)
#endif

#ifndef celt_iir
#define celt_iir __NS_SYMBOL_VXL(celt_iir)
#endif

#ifndef celt_lcg_rand
#define celt_lcg_rand __NS_SYMBOL_VXL(celt_lcg_rand)
#endif

#ifndef celt_rcp
#define celt_rcp __NS_SYMBOL_VXL(celt_rcp)
#endif

#ifndef celt_rsqrt_norm
#define celt_rsqrt_norm __NS_SYMBOL_VXL(celt_rsqrt_norm)
#endif

#ifndef celt_sqrt
#define celt_sqrt __NS_SYMBOL_VXL(celt_sqrt)
#endif

#ifndef check_control_input
#define check_control_input __NS_SYMBOL_VXL(check_control_input)
#endif

#ifndef clt_mdct_backward
#define clt_mdct_backward __NS_SYMBOL_VXL(clt_mdct_backward)
#endif

#ifndef clt_mdct_forward
#define clt_mdct_forward __NS_SYMBOL_VXL(clt_mdct_forward)
#endif

#ifndef comb_filter
#define comb_filter __NS_SYMBOL_VXL(comb_filter)
#endif

#ifndef compute_allocation
#define compute_allocation __NS_SYMBOL_VXL(compute_allocation)
#endif

#ifndef compute_band_energies
#define compute_band_energies __NS_SYMBOL_VXL(compute_band_energies)
#endif

#ifndef compute_stereo_width
#define compute_stereo_width __NS_SYMBOL_VXL(compute_stereo_width)
#endif

#ifndef current_time_ms_64
#define current_time_ms_64 __NS_SYMBOL_VXL(current_time_ms_64)
#endif

#ifndef cvmaccelerometer_event__free_unpacked
#define cvmaccelerometer_event__free_unpacked __NS_SYMBOL_VXL(cvmaccelerometer_event__free_unpacked)
#endif

#ifndef cvmaccelerometer_event__get_packed_size
#define cvmaccelerometer_event__get_packed_size __NS_SYMBOL_VXL(cvmaccelerometer_event__get_packed_size)
#endif

#ifndef cvmaccelerometer_event__init
#define cvmaccelerometer_event__init __NS_SYMBOL_VXL(cvmaccelerometer_event__init)
#endif

#ifndef cvmaccelerometer_event__pack
#define cvmaccelerometer_event__pack __NS_SYMBOL_VXL(cvmaccelerometer_event__pack)
#endif

#ifndef cvmaccelerometer_event__pack_to_buffer
#define cvmaccelerometer_event__pack_to_buffer __NS_SYMBOL_VXL(cvmaccelerometer_event__pack_to_buffer)
#endif

#ifndef cvmaccelerometer_event__unpack
#define cvmaccelerometer_event__unpack __NS_SYMBOL_VXL(cvmaccelerometer_event__unpack)
#endif

#ifndef cvmevent__free_unpacked
#define cvmevent__free_unpacked __NS_SYMBOL_VXL(cvmevent__free_unpacked)
#endif

#ifndef cvmevent__get_packed_size
#define cvmevent__get_packed_size __NS_SYMBOL_VXL(cvmevent__get_packed_size)
#endif

#ifndef cvmevent__init
#define cvmevent__init __NS_SYMBOL_VXL(cvmevent__init)
#endif

#ifndef cvmevent__pack
#define cvmevent__pack __NS_SYMBOL_VXL(cvmevent__pack)
#endif

#ifndef cvmevent__pack_to_buffer
#define cvmevent__pack_to_buffer __NS_SYMBOL_VXL(cvmevent__pack_to_buffer)
#endif

#ifndef cvmevent__unpack
#define cvmevent__unpack __NS_SYMBOL_VXL(cvmevent__unpack)
#endif

#ifndef cvmorientation_event__free_unpacked
#define cvmorientation_event__free_unpacked __NS_SYMBOL_VXL(cvmorientation_event__free_unpacked)
#endif

#ifndef cvmorientation_event__get_packed_size
#define cvmorientation_event__get_packed_size __NS_SYMBOL_VXL(cvmorientation_event__get_packed_size)
#endif

#ifndef cvmorientation_event__init
#define cvmorientation_event__init __NS_SYMBOL_VXL(cvmorientation_event__init)
#endif

#ifndef cvmorientation_event__pack
#define cvmorientation_event__pack __NS_SYMBOL_VXL(cvmorientation_event__pack)
#endif

#ifndef cvmorientation_event__pack_to_buffer
#define cvmorientation_event__pack_to_buffer __NS_SYMBOL_VXL(cvmorientation_event__pack_to_buffer)
#endif

#ifndef cvmorientation_event__unpack
#define cvmorientation_event__unpack __NS_SYMBOL_VXL(cvmorientation_event__unpack)
#endif

#ifndef cvmpoint__free_unpacked
#define cvmpoint__free_unpacked __NS_SYMBOL_VXL(cvmpoint__free_unpacked)
#endif

#ifndef cvmpoint__get_packed_size
#define cvmpoint__get_packed_size __NS_SYMBOL_VXL(cvmpoint__get_packed_size)
#endif

#ifndef cvmpoint__init
#define cvmpoint__init __NS_SYMBOL_VXL(cvmpoint__init)
#endif

#ifndef cvmpoint__pack
#define cvmpoint__pack __NS_SYMBOL_VXL(cvmpoint__pack)
#endif

#ifndef cvmpoint__pack_to_buffer
#define cvmpoint__pack_to_buffer __NS_SYMBOL_VXL(cvmpoint__pack_to_buffer)
#endif

#ifndef cvmpoint__unpack
#define cvmpoint__unpack __NS_SYMBOL_VXL(cvmpoint__unpack)
#endif

#ifndef cvmtouch__free_unpacked
#define cvmtouch__free_unpacked __NS_SYMBOL_VXL(cvmtouch__free_unpacked)
#endif

#ifndef cvmtouch__get_packed_size
#define cvmtouch__get_packed_size __NS_SYMBOL_VXL(cvmtouch__get_packed_size)
#endif

#ifndef cvmtouch__init
#define cvmtouch__init __NS_SYMBOL_VXL(cvmtouch__init)
#endif

#ifndef cvmtouch__pack
#define cvmtouch__pack __NS_SYMBOL_VXL(cvmtouch__pack)
#endif

#ifndef cvmtouch__pack_to_buffer
#define cvmtouch__pack_to_buffer __NS_SYMBOL_VXL(cvmtouch__pack_to_buffer)
#endif

#ifndef cvmtouch__unpack
#define cvmtouch__unpack __NS_SYMBOL_VXL(cvmtouch__unpack)
#endif

#ifndef cvmtouch_event__free_unpacked
#define cvmtouch_event__free_unpacked __NS_SYMBOL_VXL(cvmtouch_event__free_unpacked)
#endif

#ifndef cvmtouch_event__get_packed_size
#define cvmtouch_event__get_packed_size __NS_SYMBOL_VXL(cvmtouch_event__get_packed_size)
#endif

#ifndef cvmtouch_event__init
#define cvmtouch_event__init __NS_SYMBOL_VXL(cvmtouch_event__init)
#endif

#ifndef cvmtouch_event__pack
#define cvmtouch_event__pack __NS_SYMBOL_VXL(cvmtouch_event__pack)
#endif

#ifndef cvmtouch_event__pack_to_buffer
#define cvmtouch_event__pack_to_buffer __NS_SYMBOL_VXL(cvmtouch_event__pack_to_buffer)
#endif

#ifndef cvmtouch_event__unpack
#define cvmtouch_event__unpack __NS_SYMBOL_VXL(cvmtouch_event__unpack)
#endif

#ifndef decode_pulses
#define decode_pulses __NS_SYMBOL_VXL(decode_pulses)
#endif

#ifndef denormalise_bands
#define denormalise_bands __NS_SYMBOL_VXL(denormalise_bands)
#endif

#ifndef downmix_float
#define downmix_float __NS_SYMBOL_VXL(downmix_float)
#endif

#ifndef downmix_int
#define downmix_int __NS_SYMBOL_VXL(downmix_int)
#endif

#ifndef dt_address_destroy
#define dt_address_destroy __NS_SYMBOL_VXL(dt_address_destroy)
#endif

#ifndef dt_address_set
#define dt_address_set __NS_SYMBOL_VXL(dt_address_set)
#endif

#ifndef dt_address_to_string
#define dt_address_to_string __NS_SYMBOL_VXL(dt_address_to_string)
#endif

#ifndef dt_bit_is_set
#define dt_bit_is_set __NS_SYMBOL_VXL(dt_bit_is_set)
#endif

#ifndef dt_bit_set
#define dt_bit_set __NS_SYMBOL_VXL(dt_bit_set)
#endif

#ifndef dt_bit_tostring
#define dt_bit_tostring __NS_SYMBOL_VXL(dt_bit_tostring)
#endif

#ifndef dt_host_connect
#define dt_host_connect __NS_SYMBOL_VXL(dt_host_connect)
#endif

#ifndef dt_host_create
#define dt_host_create __NS_SYMBOL_VXL(dt_host_create)
#endif

#ifndef dt_host_destroy
#define dt_host_destroy __NS_SYMBOL_VXL(dt_host_destroy)
#endif

#ifndef dt_host_read_cb
#define dt_host_read_cb __NS_SYMBOL_VXL(dt_host_read_cb)
#endif

#ifndef dt_host_runloop
#define dt_host_runloop __NS_SYMBOL_VXL(dt_host_runloop)
#endif

#ifndef dt_host_schedule_write
#define dt_host_schedule_write __NS_SYMBOL_VXL(dt_host_schedule_write)
#endif

#ifndef dt_host_write_async_cb
#define dt_host_write_async_cb __NS_SYMBOL_VXL(dt_host_write_async_cb)
#endif

#ifndef dt_host_write_io_cb
#define dt_host_write_io_cb __NS_SYMBOL_VXL(dt_host_write_io_cb)
#endif

#ifndef dt_host_write_timer_cb
#define dt_host_write_timer_cb __NS_SYMBOL_VXL(dt_host_write_timer_cb)
#endif

#ifndef dt_incoming_packet_create
#define dt_incoming_packet_create __NS_SYMBOL_VXL(dt_incoming_packet_create)
#endif

#ifndef dt_incoming_packet_destroy
#define dt_incoming_packet_destroy __NS_SYMBOL_VXL(dt_incoming_packet_destroy)
#endif

#ifndef dt_incoming_packet_is_complete
#define dt_incoming_packet_is_complete __NS_SYMBOL_VXL(dt_incoming_packet_is_complete)
#endif

#ifndef dt_list_add
#define dt_list_add __NS_SYMBOL_VXL(dt_list_add)
#endif

#ifndef dt_list_create
#define dt_list_create __NS_SYMBOL_VXL(dt_list_create)
#endif

#ifndef dt_list_current
#define dt_list_current __NS_SYMBOL_VXL(dt_list_current)
#endif

#ifndef dt_list_destroy
#define dt_list_destroy __NS_SYMBOL_VXL(dt_list_destroy)
#endif

#ifndef dt_list_first
#define dt_list_first __NS_SYMBOL_VXL(dt_list_first)
#endif

#ifndef dt_list_insert
#define dt_list_insert __NS_SYMBOL_VXL(dt_list_insert)
#endif

#ifndef dt_list_is_empty
#define dt_list_is_empty __NS_SYMBOL_VXL(dt_list_is_empty)
#endif

#ifndef dt_list_iterator
#define dt_list_iterator __NS_SYMBOL_VXL(dt_list_iterator)
#endif

#ifndef dt_list_last
#define dt_list_last __NS_SYMBOL_VXL(dt_list_last)
#endif

#ifndef dt_list_length
#define dt_list_length __NS_SYMBOL_VXL(dt_list_length)
#endif

#ifndef dt_list_next
#define dt_list_next __NS_SYMBOL_VXL(dt_list_next)
#endif

#ifndef dt_list_peek
#define dt_list_peek __NS_SYMBOL_VXL(dt_list_peek)
#endif

#ifndef dt_list_poll
#define dt_list_poll __NS_SYMBOL_VXL(dt_list_poll)
#endif

#ifndef dt_list_pop
#define dt_list_pop __NS_SYMBOL_VXL(dt_list_pop)
#endif

#ifndef dt_list_prev
#define dt_list_prev __NS_SYMBOL_VXL(dt_list_prev)
#endif

#ifndef dt_list_remove
#define dt_list_remove __NS_SYMBOL_VXL(dt_list_remove)
#endif

#ifndef dt_loop_stop_cb
#define dt_loop_stop_cb __NS_SYMBOL_VXL(dt_loop_stop_cb)
#endif

#ifndef dt_ms_time_16
#define dt_ms_time_16 __NS_SYMBOL_VXL(dt_ms_time_16)
#endif

#ifndef dt_ms_time_32
#define dt_ms_time_32 __NS_SYMBOL_VXL(dt_ms_time_32)
#endif

#ifndef dt_ms_time_64
#define dt_ms_time_64 __NS_SYMBOL_VXL(dt_ms_time_64)
#endif

#ifndef dt_packet_create
#define dt_packet_create __NS_SYMBOL_VXL(dt_packet_create)
#endif

#ifndef dt_packet_destroy
#define dt_packet_destroy __NS_SYMBOL_VXL(dt_packet_destroy)
#endif

#ifndef dt_peer_check_state
#define dt_peer_check_state __NS_SYMBOL_VXL(dt_peer_check_state)
#endif

#ifndef dt_peer_disconnect
#define dt_peer_disconnect __NS_SYMBOL_VXL(dt_peer_disconnect)
#endif

#ifndef dt_peer_dispatch_event
#define dt_peer_dispatch_event __NS_SYMBOL_VXL(dt_peer_dispatch_event)
#endif

#ifndef dt_peer_get_packet_size
#define dt_peer_get_packet_size __NS_SYMBOL_VXL(dt_peer_get_packet_size)
#endif

#ifndef dt_peer_init
#define dt_peer_init __NS_SYMBOL_VXL(dt_peer_init)
#endif

#ifndef dt_peer_ping_timer_cb
#define dt_peer_ping_timer_cb __NS_SYMBOL_VXL(dt_peer_ping_timer_cb)
#endif

#ifndef dt_peer_process_incoming_packet
#define dt_peer_process_incoming_packet __NS_SYMBOL_VXL(dt_peer_process_incoming_packet)
#endif

#ifndef dt_peer_process_rtt
#define dt_peer_process_rtt __NS_SYMBOL_VXL(dt_peer_process_rtt)
#endif

#ifndef dt_peer_queue_incoming_packet
#define dt_peer_queue_incoming_packet __NS_SYMBOL_VXL(dt_peer_queue_incoming_packet)
#endif

#ifndef dt_peer_queue_outgoing_command
#define dt_peer_queue_outgoing_command __NS_SYMBOL_VXL(dt_peer_queue_outgoing_command)
#endif

#ifndef dt_peer_reset
#define dt_peer_reset __NS_SYMBOL_VXL(dt_peer_reset)
#endif

#ifndef dt_peer_send_connect
#define dt_peer_send_connect __NS_SYMBOL_VXL(dt_peer_send_connect)
#endif

#ifndef dt_peer_send_disconnect
#define dt_peer_send_disconnect __NS_SYMBOL_VXL(dt_peer_send_disconnect)
#endif

#ifndef dt_peer_send_packet
#define dt_peer_send_packet __NS_SYMBOL_VXL(dt_peer_send_packet)
#endif

#ifndef dt_peer_send_ping
#define dt_peer_send_ping __NS_SYMBOL_VXL(dt_peer_send_ping)
#endif

#ifndef dt_peer_set_state
#define dt_peer_set_state __NS_SYMBOL_VXL(dt_peer_set_state)
#endif

#ifndef dt_sequence_compare
#define dt_sequence_compare __NS_SYMBOL_VXL(dt_sequence_compare)
#endif

#ifndef ec_dec_bit_logp
#define ec_dec_bit_logp __NS_SYMBOL_VXL(ec_dec_bit_logp)
#endif

#ifndef ec_dec_bits
#define ec_dec_bits __NS_SYMBOL_VXL(ec_dec_bits)
#endif

#ifndef ec_dec_icdf
#define ec_dec_icdf __NS_SYMBOL_VXL(ec_dec_icdf)
#endif

#ifndef ec_dec_init
#define ec_dec_init __NS_SYMBOL_VXL(ec_dec_init)
#endif

#ifndef ec_dec_uint
#define ec_dec_uint __NS_SYMBOL_VXL(ec_dec_uint)
#endif

#ifndef ec_dec_update
#define ec_dec_update __NS_SYMBOL_VXL(ec_dec_update)
#endif

#ifndef ec_decode
#define ec_decode __NS_SYMBOL_VXL(ec_decode)
#endif

#ifndef ec_decode_bin
#define ec_decode_bin __NS_SYMBOL_VXL(ec_decode_bin)
#endif

#ifndef ec_enc_bit_logp
#define ec_enc_bit_logp __NS_SYMBOL_VXL(ec_enc_bit_logp)
#endif

#ifndef ec_enc_bits
#define ec_enc_bits __NS_SYMBOL_VXL(ec_enc_bits)
#endif

#ifndef ec_enc_done
#define ec_enc_done __NS_SYMBOL_VXL(ec_enc_done)
#endif

#ifndef ec_enc_icdf
#define ec_enc_icdf __NS_SYMBOL_VXL(ec_enc_icdf)
#endif

#ifndef ec_enc_init
#define ec_enc_init __NS_SYMBOL_VXL(ec_enc_init)
#endif

#ifndef ec_enc_patch_initial_bits
#define ec_enc_patch_initial_bits __NS_SYMBOL_VXL(ec_enc_patch_initial_bits)
#endif

#ifndef ec_enc_shrink
#define ec_enc_shrink __NS_SYMBOL_VXL(ec_enc_shrink)
#endif

#ifndef ec_enc_uint
#define ec_enc_uint __NS_SYMBOL_VXL(ec_enc_uint)
#endif

#ifndef ec_encode
#define ec_encode __NS_SYMBOL_VXL(ec_encode)
#endif

#ifndef ec_encode_bin
#define ec_encode_bin __NS_SYMBOL_VXL(ec_encode_bin)
#endif

#ifndef ec_laplace_decode
#define ec_laplace_decode __NS_SYMBOL_VXL(ec_laplace_decode)
#endif

#ifndef ec_laplace_encode
#define ec_laplace_encode __NS_SYMBOL_VXL(ec_laplace_encode)
#endif

#ifndef ec_tell_frac
#define ec_tell_frac __NS_SYMBOL_VXL(ec_tell_frac)
#endif

#ifndef encode_pulses
#define encode_pulses __NS_SYMBOL_VXL(encode_pulses)
#endif

#ifndef encode_size
#define encode_size __NS_SYMBOL_VXL(encode_size)
#endif

#ifndef ev_async_send
#define ev_async_send __NS_SYMBOL_VXL(ev_async_send)
#endif

#ifndef ev_async_start
#define ev_async_start __NS_SYMBOL_VXL(ev_async_start)
#endif

#ifndef ev_async_stop
#define ev_async_stop __NS_SYMBOL_VXL(ev_async_stop)
#endif

#ifndef ev_backend
#define ev_backend __NS_SYMBOL_VXL(ev_backend)
#endif

#ifndef ev_break
#define ev_break __NS_SYMBOL_VXL(ev_break)
#endif

#ifndef ev_check_start
#define ev_check_start __NS_SYMBOL_VXL(ev_check_start)
#endif

#ifndef ev_check_stop
#define ev_check_stop __NS_SYMBOL_VXL(ev_check_stop)
#endif

#ifndef ev_child_start
#define ev_child_start __NS_SYMBOL_VXL(ev_child_start)
#endif

#ifndef ev_child_stop
#define ev_child_stop __NS_SYMBOL_VXL(ev_child_stop)
#endif

#ifndef ev_cleanup_start
#define ev_cleanup_start __NS_SYMBOL_VXL(ev_cleanup_start)
#endif

#ifndef ev_cleanup_stop
#define ev_cleanup_stop __NS_SYMBOL_VXL(ev_cleanup_stop)
#endif

#ifndef ev_clear_pending
#define ev_clear_pending __NS_SYMBOL_VXL(ev_clear_pending)
#endif

#ifndef ev_default_loop
#define ev_default_loop __NS_SYMBOL_VXL(ev_default_loop)
#endif

#ifndef ev_depth
#define ev_depth __NS_SYMBOL_VXL(ev_depth)
#endif

#ifndef ev_embed_start
#define ev_embed_start __NS_SYMBOL_VXL(ev_embed_start)
#endif

#ifndef ev_embed_stop
#define ev_embed_stop __NS_SYMBOL_VXL(ev_embed_stop)
#endif

#ifndef ev_embed_sweep
#define ev_embed_sweep __NS_SYMBOL_VXL(ev_embed_sweep)
#endif

#ifndef ev_embeddable_backends
#define ev_embeddable_backends __NS_SYMBOL_VXL(ev_embeddable_backends)
#endif

#ifndef ev_feed_event
#define ev_feed_event __NS_SYMBOL_VXL(ev_feed_event)
#endif

#ifndef ev_feed_fd_event
#define ev_feed_fd_event __NS_SYMBOL_VXL(ev_feed_fd_event)
#endif

#ifndef ev_feed_signal
#define ev_feed_signal __NS_SYMBOL_VXL(ev_feed_signal)
#endif

#ifndef ev_feed_signal_event
#define ev_feed_signal_event __NS_SYMBOL_VXL(ev_feed_signal_event)
#endif

#ifndef ev_fork_start
#define ev_fork_start __NS_SYMBOL_VXL(ev_fork_start)
#endif

#ifndef ev_fork_stop
#define ev_fork_stop __NS_SYMBOL_VXL(ev_fork_stop)
#endif

#ifndef ev_idle_start
#define ev_idle_start __NS_SYMBOL_VXL(ev_idle_start)
#endif

#ifndef ev_idle_stop
#define ev_idle_stop __NS_SYMBOL_VXL(ev_idle_stop)
#endif

#ifndef ev_invoke
#define ev_invoke __NS_SYMBOL_VXL(ev_invoke)
#endif

#ifndef ev_invoke_pending
#define ev_invoke_pending __NS_SYMBOL_VXL(ev_invoke_pending)
#endif

#ifndef ev_io_start
#define ev_io_start __NS_SYMBOL_VXL(ev_io_start)
#endif

#ifndef ev_io_stop
#define ev_io_stop __NS_SYMBOL_VXL(ev_io_stop)
#endif

#ifndef ev_iteration
#define ev_iteration __NS_SYMBOL_VXL(ev_iteration)
#endif

#ifndef ev_loop_destroy
#define ev_loop_destroy __NS_SYMBOL_VXL(ev_loop_destroy)
#endif

#ifndef ev_loop_fork
#define ev_loop_fork __NS_SYMBOL_VXL(ev_loop_fork)
#endif

#ifndef ev_loop_new
#define ev_loop_new __NS_SYMBOL_VXL(ev_loop_new)
#endif

#ifndef ev_now
#define ev_now __NS_SYMBOL_VXL(ev_now)
#endif

#ifndef ev_now_update
#define ev_now_update __NS_SYMBOL_VXL(ev_now_update)
#endif

#ifndef ev_once
#define ev_once __NS_SYMBOL_VXL(ev_once)
#endif

#ifndef ev_pending_count
#define ev_pending_count __NS_SYMBOL_VXL(ev_pending_count)
#endif

#ifndef ev_periodic_again
#define ev_periodic_again __NS_SYMBOL_VXL(ev_periodic_again)
#endif

#ifndef ev_periodic_start
#define ev_periodic_start __NS_SYMBOL_VXL(ev_periodic_start)
#endif

#ifndef ev_periodic_stop
#define ev_periodic_stop __NS_SYMBOL_VXL(ev_periodic_stop)
#endif

#ifndef ev_prepare_start
#define ev_prepare_start __NS_SYMBOL_VXL(ev_prepare_start)
#endif

#ifndef ev_prepare_stop
#define ev_prepare_stop __NS_SYMBOL_VXL(ev_prepare_stop)
#endif

#ifndef ev_recommended_backends
#define ev_recommended_backends __NS_SYMBOL_VXL(ev_recommended_backends)
#endif

#ifndef ev_ref
#define ev_ref __NS_SYMBOL_VXL(ev_ref)
#endif

#ifndef ev_resume
#define ev_resume __NS_SYMBOL_VXL(ev_resume)
#endif

#ifndef ev_run
#define ev_run __NS_SYMBOL_VXL(ev_run)
#endif

#ifndef ev_set_allocator
#define ev_set_allocator __NS_SYMBOL_VXL(ev_set_allocator)
#endif

#ifndef ev_set_invoke_pending_cb
#define ev_set_invoke_pending_cb __NS_SYMBOL_VXL(ev_set_invoke_pending_cb)
#endif

#ifndef ev_set_io_collect_interval
#define ev_set_io_collect_interval __NS_SYMBOL_VXL(ev_set_io_collect_interval)
#endif

#ifndef ev_set_loop_release_cb
#define ev_set_loop_release_cb __NS_SYMBOL_VXL(ev_set_loop_release_cb)
#endif

#ifndef ev_set_syserr_cb
#define ev_set_syserr_cb __NS_SYMBOL_VXL(ev_set_syserr_cb)
#endif

#ifndef ev_set_timeout_collect_interval
#define ev_set_timeout_collect_interval __NS_SYMBOL_VXL(ev_set_timeout_collect_interval)
#endif

#ifndef ev_set_userdata
#define ev_set_userdata __NS_SYMBOL_VXL(ev_set_userdata)
#endif

#ifndef ev_signal_start
#define ev_signal_start __NS_SYMBOL_VXL(ev_signal_start)
#endif

#ifndef ev_signal_stop
#define ev_signal_stop __NS_SYMBOL_VXL(ev_signal_stop)
#endif

#ifndef ev_sleep
#define ev_sleep __NS_SYMBOL_VXL(ev_sleep)
#endif

#ifndef ev_stat_start
#define ev_stat_start __NS_SYMBOL_VXL(ev_stat_start)
#endif

#ifndef ev_stat_stat
#define ev_stat_stat __NS_SYMBOL_VXL(ev_stat_stat)
#endif

#ifndef ev_stat_stop
#define ev_stat_stop __NS_SYMBOL_VXL(ev_stat_stop)
#endif

#ifndef ev_supported_backends
#define ev_supported_backends __NS_SYMBOL_VXL(ev_supported_backends)
#endif

#ifndef ev_suspend
#define ev_suspend __NS_SYMBOL_VXL(ev_suspend)
#endif

#ifndef ev_time
#define ev_time __NS_SYMBOL_VXL(ev_time)
#endif

#ifndef ev_timer_again
#define ev_timer_again __NS_SYMBOL_VXL(ev_timer_again)
#endif

#ifndef ev_timer_remaining
#define ev_timer_remaining __NS_SYMBOL_VXL(ev_timer_remaining)
#endif

#ifndef ev_timer_start
#define ev_timer_start __NS_SYMBOL_VXL(ev_timer_start)
#endif

#ifndef ev_timer_stop
#define ev_timer_stop __NS_SYMBOL_VXL(ev_timer_stop)
#endif

#ifndef ev_unref
#define ev_unref __NS_SYMBOL_VXL(ev_unref)
#endif

#ifndef ev_userdata
#define ev_userdata __NS_SYMBOL_VXL(ev_userdata)
#endif

#ifndef ev_verify
#define ev_verify __NS_SYMBOL_VXL(ev_verify)
#endif

#ifndef ev_version_major
#define ev_version_major __NS_SYMBOL_VXL(ev_version_major)
#endif

#ifndef ev_version_minor
#define ev_version_minor __NS_SYMBOL_VXL(ev_version_minor)
#endif

#ifndef fec_decode_data_packet
#define fec_decode_data_packet __NS_SYMBOL_VXL(fec_decode_data_packet)
#endif

#ifndef fec_decode_end
#define fec_decode_end __NS_SYMBOL_VXL(fec_decode_end)
#endif

#ifndef fec_decode_fec_packet
#define fec_decode_fec_packet __NS_SYMBOL_VXL(fec_decode_fec_packet)
#endif

#ifndef fec_decode_init
#define fec_decode_init __NS_SYMBOL_VXL(fec_decode_init)
#endif

#ifndef fec_recover_packet
#define fec_recover_packet __NS_SYMBOL_VXL(fec_recover_packet)
#endif

#ifndef fec_wh_decode_data_packet
#define fec_wh_decode_data_packet __NS_SYMBOL_VXL(fec_wh_decode_data_packet)
#endif

#ifndef fec_wh_decode_end
#define fec_wh_decode_end __NS_SYMBOL_VXL(fec_wh_decode_end)
#endif

#ifndef fec_wh_decode_fec_packet
#define fec_wh_decode_fec_packet __NS_SYMBOL_VXL(fec_wh_decode_fec_packet)
#endif

#ifndef fec_wh_decode_init
#define fec_wh_decode_init __NS_SYMBOL_VXL(fec_wh_decode_init)
#endif

#ifndef fec_wh_recover_packet
#define fec_wh_recover_packet __NS_SYMBOL_VXL(fec_wh_recover_packet)
#endif

#ifndef ff_add_index_entry
#define ff_add_index_entry __NS_SYMBOL_VXL(ff_add_index_entry)
#endif

#ifndef ff_add_param_change
#define ff_add_param_change __NS_SYMBOL_VXL(ff_add_param_change)
#endif

#ifndef ff_butterflies_float_neon
#define ff_butterflies_float_neon __NS_SYMBOL_VXL(ff_butterflies_float_neon)
#endif

#ifndef ff_check_interrupt
#define ff_check_interrupt __NS_SYMBOL_VXL(ff_check_interrupt)
#endif

#ifndef ff_codec_get_id
#define ff_codec_get_id __NS_SYMBOL_VXL(ff_codec_get_id)
#endif

#ifndef ff_codec_get_tag
#define ff_codec_get_tag __NS_SYMBOL_VXL(ff_codec_get_tag)
#endif

#ifndef ff_compute_frame_duration
#define ff_compute_frame_duration __NS_SYMBOL_VXL(ff_compute_frame_duration)
#endif

#ifndef ff_cpu_cpuid
#define ff_cpu_cpuid __NS_SYMBOL_VXL(ff_cpu_cpuid)
#endif

#ifndef ff_cpu_xgetbv
#define ff_cpu_xgetbv __NS_SYMBOL_VXL(ff_cpu_xgetbv)
#endif

#ifndef ff_crc04C11DB7_update
#define ff_crc04C11DB7_update __NS_SYMBOL_VXL(ff_crc04C11DB7_update)
#endif

#ifndef ff_data_to_hex
#define ff_data_to_hex __NS_SYMBOL_VXL(ff_data_to_hex)
#endif

#ifndef ff_find_stream_index
#define ff_find_stream_index __NS_SYMBOL_VXL(ff_find_stream_index)
#endif

#ifndef ff_float_dsp_init_arm
#define ff_float_dsp_init_arm __NS_SYMBOL_VXL(ff_float_dsp_init_arm)
#endif

#ifndef ff_float_dsp_init_neon
#define ff_float_dsp_init_neon __NS_SYMBOL_VXL(ff_float_dsp_init_neon)
#endif

#ifndef ff_float_dsp_init_vfp
#define ff_float_dsp_init_vfp __NS_SYMBOL_VXL(ff_float_dsp_init_vfp)
#endif

#ifndef ff_float_dsp_init_x86
#define ff_float_dsp_init_x86 __NS_SYMBOL_VXL(ff_float_dsp_init_x86)
#endif

#ifndef ff_free_stream
#define ff_free_stream __NS_SYMBOL_VXL(ff_free_stream)
#endif

#ifndef ff_gen_search
#define ff_gen_search __NS_SYMBOL_VXL(ff_gen_search)
#endif

#ifndef ff_generate_avci_extradata
#define ff_generate_avci_extradata __NS_SYMBOL_VXL(ff_generate_avci_extradata)
#endif

#ifndef ff_get_audio_frame_size
#define ff_get_audio_frame_size __NS_SYMBOL_VXL(ff_get_audio_frame_size)
#endif

#ifndef ff_get_cpu_flags_arm
#define ff_get_cpu_flags_arm __NS_SYMBOL_VXL(ff_get_cpu_flags_arm)
#endif

#ifndef ff_get_cpu_flags_x86
#define ff_get_cpu_flags_x86 __NS_SYMBOL_VXL(ff_get_cpu_flags_x86)
#endif

#ifndef ff_get_line
#define ff_get_line __NS_SYMBOL_VXL(ff_get_line)
#endif

#ifndef ff_get_pcm_codec_id
#define ff_get_pcm_codec_id __NS_SYMBOL_VXL(ff_get_pcm_codec_id)
#endif

#ifndef ff_get_v_length
#define ff_get_v_length __NS_SYMBOL_VXL(ff_get_v_length)
#endif

#ifndef ff_hex_to_data
#define ff_hex_to_data __NS_SYMBOL_VXL(ff_hex_to_data)
#endif

#ifndef ff_http_match_no_proxy
#define ff_http_match_no_proxy __NS_SYMBOL_VXL(ff_http_match_no_proxy)
#endif

#ifndef ff_id3v2_free_extra_meta
#define ff_id3v2_free_extra_meta __NS_SYMBOL_VXL(ff_id3v2_free_extra_meta)
#endif

#ifndef ff_id3v2_match
#define ff_id3v2_match __NS_SYMBOL_VXL(ff_id3v2_match)
#endif

#ifndef ff_id3v2_parse_apic
#define ff_id3v2_parse_apic __NS_SYMBOL_VXL(ff_id3v2_parse_apic)
#endif

#ifndef ff_id3v2_read
#define ff_id3v2_read __NS_SYMBOL_VXL(ff_id3v2_read)
#endif

#ifndef ff_id3v2_tag_len
#define ff_id3v2_tag_len __NS_SYMBOL_VXL(ff_id3v2_tag_len)
#endif

#ifndef ff_index_search_timestamp
#define ff_index_search_timestamp __NS_SYMBOL_VXL(ff_index_search_timestamp)
#endif

#ifndef ff_inet_aton
#define ff_inet_aton __NS_SYMBOL_VXL(ff_inet_aton)
#endif

#ifndef ff_is_multicast_address
#define ff_is_multicast_address __NS_SYMBOL_VXL(ff_is_multicast_address)
#endif

#ifndef ff_iso8601_to_unix_time
#define ff_iso8601_to_unix_time __NS_SYMBOL_VXL(ff_iso8601_to_unix_time)
#endif

#ifndef ff_make_absolute_url
#define ff_make_absolute_url __NS_SYMBOL_VXL(ff_make_absolute_url)
#endif

#ifndef ff_mpegts_parse_close
#define ff_mpegts_parse_close __NS_SYMBOL_VXL(ff_mpegts_parse_close)
#endif

#ifndef ff_mpegts_parse_open
#define ff_mpegts_parse_open __NS_SYMBOL_VXL(ff_mpegts_parse_open)
#endif

#ifndef ff_mpegts_parse_packet
#define ff_mpegts_parse_packet __NS_SYMBOL_VXL(ff_mpegts_parse_packet)
#endif

#ifndef ff_network_close
#define ff_network_close __NS_SYMBOL_VXL(ff_network_close)
#endif

#ifndef ff_network_init
#define ff_network_init __NS_SYMBOL_VXL(ff_network_init)
#endif

#ifndef ff_network_wait_fd
#define ff_network_wait_fd __NS_SYMBOL_VXL(ff_network_wait_fd)
#endif

#ifndef ff_network_wait_fd_timeout
#define ff_network_wait_fd_timeout __NS_SYMBOL_VXL(ff_network_wait_fd_timeout)
#endif

#ifndef ff_ntp_time
#define ff_ntp_time __NS_SYMBOL_VXL(ff_ntp_time)
#endif

#ifndef ff_parse_fmtp
#define ff_parse_fmtp __NS_SYMBOL_VXL(ff_parse_fmtp)
#endif

#ifndef ff_parse_key_value
#define ff_parse_key_value __NS_SYMBOL_VXL(ff_parse_key_value)
#endif

#ifndef ff_program_add_stream_index
#define ff_program_add_stream_index __NS_SYMBOL_VXL(ff_program_add_stream_index)
#endif

#ifndef ff_put_v
#define ff_put_v __NS_SYMBOL_VXL(ff_put_v)
#endif

#ifndef ff_rdt_calc_response_and_checksum
#define ff_rdt_calc_response_and_checksum __NS_SYMBOL_VXL(ff_rdt_calc_response_and_checksum)
#endif

#ifndef ff_rdt_parse_close
#define ff_rdt_parse_close __NS_SYMBOL_VXL(ff_rdt_parse_close)
#endif

#ifndef ff_rdt_parse_open
#define ff_rdt_parse_open __NS_SYMBOL_VXL(ff_rdt_parse_open)
#endif

#ifndef ff_rdt_parse_packet
#define ff_rdt_parse_packet __NS_SYMBOL_VXL(ff_rdt_parse_packet)
#endif

#ifndef ff_read_frame_flush
#define ff_read_frame_flush __NS_SYMBOL_VXL(ff_read_frame_flush)
#endif

#ifndef ff_read_packet
#define ff_read_packet __NS_SYMBOL_VXL(ff_read_packet)
#endif

#ifndef ff_real_parse_sdp_a_line
#define ff_real_parse_sdp_a_line __NS_SYMBOL_VXL(ff_real_parse_sdp_a_line)
#endif

#ifndef ff_reduce_index
#define ff_reduce_index __NS_SYMBOL_VXL(ff_reduce_index)
#endif

#ifndef ff_register_dynamic_payload_handler
#define ff_register_dynamic_payload_handler __NS_SYMBOL_VXL(ff_register_dynamic_payload_handler)
#endif

#ifndef ff_rtp_check_and_send_back_rr
#define ff_rtp_check_and_send_back_rr __NS_SYMBOL_VXL(ff_rtp_check_and_send_back_rr)
#endif

#ifndef ff_rtp_codec_id
#define ff_rtp_codec_id __NS_SYMBOL_VXL(ff_rtp_codec_id)
#endif

#ifndef ff_rtp_enc_name
#define ff_rtp_enc_name __NS_SYMBOL_VXL(ff_rtp_enc_name)
#endif

#ifndef ff_rtp_finalize_packet
#define ff_rtp_finalize_packet __NS_SYMBOL_VXL(ff_rtp_finalize_packet)
#endif

#ifndef ff_rtp_get_codec_info
#define ff_rtp_get_codec_info __NS_SYMBOL_VXL(ff_rtp_get_codec_info)
#endif

#ifndef ff_rtp_get_local_rtcp_port
#define ff_rtp_get_local_rtcp_port __NS_SYMBOL_VXL(ff_rtp_get_local_rtcp_port)
#endif

#ifndef ff_rtp_get_local_rtp_port
#define ff_rtp_get_local_rtp_port __NS_SYMBOL_VXL(ff_rtp_get_local_rtp_port)
#endif

#ifndef ff_rtp_get_payload_type
#define ff_rtp_get_payload_type __NS_SYMBOL_VXL(ff_rtp_get_payload_type)
#endif

#ifndef ff_rtp_handler_find_by_id
#define ff_rtp_handler_find_by_id __NS_SYMBOL_VXL(ff_rtp_handler_find_by_id)
#endif

#ifndef ff_rtp_handler_find_by_name
#define ff_rtp_handler_find_by_name __NS_SYMBOL_VXL(ff_rtp_handler_find_by_name)
#endif

#ifndef ff_rtp_parse_close
#define ff_rtp_parse_close __NS_SYMBOL_VXL(ff_rtp_parse_close)
#endif

#ifndef ff_rtp_parse_open
#define ff_rtp_parse_open __NS_SYMBOL_VXL(ff_rtp_parse_open)
#endif

#ifndef ff_rtp_parse_packet
#define ff_rtp_parse_packet __NS_SYMBOL_VXL(ff_rtp_parse_packet)
#endif

#ifndef ff_rtp_parse_set_crypto
#define ff_rtp_parse_set_crypto __NS_SYMBOL_VXL(ff_rtp_parse_set_crypto)
#endif

#ifndef ff_rtp_parse_set_dynamic_protocol
#define ff_rtp_parse_set_dynamic_protocol __NS_SYMBOL_VXL(ff_rtp_parse_set_dynamic_protocol)
#endif

#ifndef ff_rtp_queued_packet_time
#define ff_rtp_queued_packet_time __NS_SYMBOL_VXL(ff_rtp_queued_packet_time)
#endif

#ifndef ff_rtp_reset_packet_queue
#define ff_rtp_reset_packet_queue __NS_SYMBOL_VXL(ff_rtp_reset_packet_queue)
#endif

#ifndef ff_rtp_send_punch_packets
#define ff_rtp_send_punch_packets __NS_SYMBOL_VXL(ff_rtp_send_punch_packets)
#endif

#ifndef ff_rtp_send_rtcp_feedback
#define ff_rtp_send_rtcp_feedback __NS_SYMBOL_VXL(ff_rtp_send_rtcp_feedback)
#endif

#ifndef ff_rtp_set_remote_url
#define ff_rtp_set_remote_url __NS_SYMBOL_VXL(ff_rtp_set_remote_url)
#endif

#ifndef ff_rtsp_close_streams
#define ff_rtsp_close_streams __NS_SYMBOL_VXL(ff_rtsp_close_streams)
#endif

#ifndef ff_rtsp_fetch_packet
#define ff_rtsp_fetch_packet __NS_SYMBOL_VXL(ff_rtsp_fetch_packet)
#endif

#ifndef ff_rtsp_next_attr_and_value
#define ff_rtsp_next_attr_and_value __NS_SYMBOL_VXL(ff_rtsp_next_attr_and_value)
#endif

#ifndef ff_rtsp_open_transport_ctx
#define ff_rtsp_open_transport_ctx __NS_SYMBOL_VXL(ff_rtsp_open_transport_ctx)
#endif

#ifndef ff_rtsp_undo_setup
#define ff_rtsp_undo_setup __NS_SYMBOL_VXL(ff_rtsp_undo_setup)
#endif

#ifndef ff_scalarproduct_float_neon
#define ff_scalarproduct_float_neon __NS_SYMBOL_VXL(ff_scalarproduct_float_neon)
#endif

#ifndef ff_scalarproduct_float_sse
#define ff_scalarproduct_float_sse __NS_SYMBOL_VXL(ff_scalarproduct_float_sse)
#endif

#ifndef ff_sdp_parse
#define ff_sdp_parse __NS_SYMBOL_VXL(ff_sdp_parse)
#endif

#ifndef ff_sdp_write_media
#define ff_sdp_write_media __NS_SYMBOL_VXL(ff_sdp_write_media)
#endif

#ifndef ff_seek_frame_binary
#define ff_seek_frame_binary __NS_SYMBOL_VXL(ff_seek_frame_binary)
#endif

#ifndef ff_socket_nonblock
#define ff_socket_nonblock __NS_SYMBOL_VXL(ff_socket_nonblock)
#endif

#ifndef ff_srtp_decrypt
#define ff_srtp_decrypt __NS_SYMBOL_VXL(ff_srtp_decrypt)
#endif

#ifndef ff_srtp_free
#define ff_srtp_free __NS_SYMBOL_VXL(ff_srtp_free)
#endif

#ifndef ff_srtp_set_crypto
#define ff_srtp_set_crypto __NS_SYMBOL_VXL(ff_srtp_set_crypto)
#endif

#ifndef ff_tls_deinit
#define ff_tls_deinit __NS_SYMBOL_VXL(ff_tls_deinit)
#endif

#ifndef ff_tls_init
#define ff_tls_init __NS_SYMBOL_VXL(ff_tls_init)
#endif

#ifndef ff_udp_get_local_port
#define ff_udp_get_local_port __NS_SYMBOL_VXL(ff_udp_get_local_port)
#endif

#ifndef ff_udp_set_remote_url
#define ff_udp_set_remote_url __NS_SYMBOL_VXL(ff_udp_set_remote_url)
#endif

#ifndef ff_update_cur_dts
#define ff_update_cur_dts __NS_SYMBOL_VXL(ff_update_cur_dts)
#endif

#ifndef ff_url_join
#define ff_url_join __NS_SYMBOL_VXL(ff_url_join)
#endif

#ifndef ff_vector_dmul_scalar_avx
#define ff_vector_dmul_scalar_avx __NS_SYMBOL_VXL(ff_vector_dmul_scalar_avx)
#endif

#ifndef ff_vector_dmul_scalar_sse2
#define ff_vector_dmul_scalar_sse2 __NS_SYMBOL_VXL(ff_vector_dmul_scalar_sse2)
#endif

#ifndef ff_vector_fmac_scalar_avx
#define ff_vector_fmac_scalar_avx __NS_SYMBOL_VXL(ff_vector_fmac_scalar_avx)
#endif

#ifndef ff_vector_fmac_scalar_neon
#define ff_vector_fmac_scalar_neon __NS_SYMBOL_VXL(ff_vector_fmac_scalar_neon)
#endif

#ifndef ff_vector_fmac_scalar_sse
#define ff_vector_fmac_scalar_sse __NS_SYMBOL_VXL(ff_vector_fmac_scalar_sse)
#endif

#ifndef ff_vector_fmul_add_avx
#define ff_vector_fmul_add_avx __NS_SYMBOL_VXL(ff_vector_fmul_add_avx)
#endif

#ifndef ff_vector_fmul_add_neon
#define ff_vector_fmul_add_neon __NS_SYMBOL_VXL(ff_vector_fmul_add_neon)
#endif

#ifndef ff_vector_fmul_add_sse
#define ff_vector_fmul_add_sse __NS_SYMBOL_VXL(ff_vector_fmul_add_sse)
#endif

#ifndef ff_vector_fmul_avx
#define ff_vector_fmul_avx __NS_SYMBOL_VXL(ff_vector_fmul_avx)
#endif

#ifndef ff_vector_fmul_neon
#define ff_vector_fmul_neon __NS_SYMBOL_VXL(ff_vector_fmul_neon)
#endif

#ifndef ff_vector_fmul_reverse_avx
#define ff_vector_fmul_reverse_avx __NS_SYMBOL_VXL(ff_vector_fmul_reverse_avx)
#endif

#ifndef ff_vector_fmul_reverse_neon
#define ff_vector_fmul_reverse_neon __NS_SYMBOL_VXL(ff_vector_fmul_reverse_neon)
#endif

#ifndef ff_vector_fmul_reverse_sse
#define ff_vector_fmul_reverse_sse __NS_SYMBOL_VXL(ff_vector_fmul_reverse_sse)
#endif

#ifndef ff_vector_fmul_reverse_vfp
#define ff_vector_fmul_reverse_vfp __NS_SYMBOL_VXL(ff_vector_fmul_reverse_vfp)
#endif

#ifndef ff_vector_fmul_scalar_neon
#define ff_vector_fmul_scalar_neon __NS_SYMBOL_VXL(ff_vector_fmul_scalar_neon)
#endif

#ifndef ff_vector_fmul_scalar_sse
#define ff_vector_fmul_scalar_sse __NS_SYMBOL_VXL(ff_vector_fmul_scalar_sse)
#endif

#ifndef ff_vector_fmul_sse
#define ff_vector_fmul_sse __NS_SYMBOL_VXL(ff_vector_fmul_sse)
#endif

#ifndef ff_vector_fmul_vfp
#define ff_vector_fmul_vfp __NS_SYMBOL_VXL(ff_vector_fmul_vfp)
#endif

#ifndef ff_vector_fmul_window_neon
#define ff_vector_fmul_window_neon __NS_SYMBOL_VXL(ff_vector_fmul_window_neon)
#endif

#ifndef ff_wms_parse_sdp_a_line
#define ff_wms_parse_sdp_a_line __NS_SYMBOL_VXL(ff_wms_parse_sdp_a_line)
#endif

#ifndef ffio_fdopen
#define ffio_fdopen __NS_SYMBOL_VXL(ffio_fdopen)
#endif

#ifndef ffio_fill
#define ffio_fill __NS_SYMBOL_VXL(ffio_fill)
#endif

#ifndef ffio_get_checksum
#define ffio_get_checksum __NS_SYMBOL_VXL(ffio_get_checksum)
#endif

#ifndef ffio_init_checksum
#define ffio_init_checksum __NS_SYMBOL_VXL(ffio_init_checksum)
#endif

#ifndef ffio_init_context
#define ffio_init_context __NS_SYMBOL_VXL(ffio_init_context)
#endif

#ifndef ffio_limit
#define ffio_limit __NS_SYMBOL_VXL(ffio_limit)
#endif

#ifndef ffio_open_dyn_packet_buf
#define ffio_open_dyn_packet_buf __NS_SYMBOL_VXL(ffio_open_dyn_packet_buf)
#endif

#ifndef ffio_read_partial
#define ffio_read_partial __NS_SYMBOL_VXL(ffio_read_partial)
#endif

#ifndef ffio_read_varlen
#define ffio_read_varlen __NS_SYMBOL_VXL(ffio_read_varlen)
#endif

#ifndef ffio_rewind_with_probe_data
#define ffio_rewind_with_probe_data __NS_SYMBOL_VXL(ffio_rewind_with_probe_data)
#endif

#ifndef ffio_set_buf_size
#define ffio_set_buf_size __NS_SYMBOL_VXL(ffio_set_buf_size)
#endif

#ifndef ffurl_alloc
#define ffurl_alloc __NS_SYMBOL_VXL(ffurl_alloc)
#endif

#ifndef ffurl_close
#define ffurl_close __NS_SYMBOL_VXL(ffurl_close)
#endif

#ifndef ffurl_closep
#define ffurl_closep __NS_SYMBOL_VXL(ffurl_closep)
#endif

#ifndef ffurl_connect
#define ffurl_connect __NS_SYMBOL_VXL(ffurl_connect)
#endif

#ifndef ffurl_get_file_handle
#define ffurl_get_file_handle __NS_SYMBOL_VXL(ffurl_get_file_handle)
#endif

#ifndef ffurl_get_multi_file_handle
#define ffurl_get_multi_file_handle __NS_SYMBOL_VXL(ffurl_get_multi_file_handle)
#endif

#ifndef ffurl_open
#define ffurl_open __NS_SYMBOL_VXL(ffurl_open)
#endif

#ifndef ffurl_protocol_next
#define ffurl_protocol_next __NS_SYMBOL_VXL(ffurl_protocol_next)
#endif

#ifndef ffurl_read
#define ffurl_read __NS_SYMBOL_VXL(ffurl_read)
#endif

#ifndef ffurl_read_complete
#define ffurl_read_complete __NS_SYMBOL_VXL(ffurl_read_complete)
#endif

#ifndef ffurl_register_protocol
#define ffurl_register_protocol __NS_SYMBOL_VXL(ffurl_register_protocol)
#endif

#ifndef ffurl_seek
#define ffurl_seek __NS_SYMBOL_VXL(ffurl_seek)
#endif

#ifndef ffurl_shutdown
#define ffurl_shutdown __NS_SYMBOL_VXL(ffurl_shutdown)
#endif

#ifndef ffurl_size
#define ffurl_size __NS_SYMBOL_VXL(ffurl_size)
#endif

#ifndef ffurl_write
#define ffurl_write __NS_SYMBOL_VXL(ffurl_write)
#endif

#ifndef frac_div32
#define frac_div32 __NS_SYMBOL_VXL(frac_div32)
#endif

#ifndef frame_size_select
#define frame_size_select __NS_SYMBOL_VXL(frame_size_select)
#endif

#ifndef getAndClearLastFrameCorruptedFlag
#define getAndClearLastFrameCorruptedFlag __NS_SYMBOL_VXL(getAndClearLastFrameCorruptedFlag)
#endif

#ifndef getAvformatStats
#define getAvformatStats __NS_SYMBOL_VXL(getAvformatStats)
#endif

#ifndef get_left_channel
#define get_left_channel __NS_SYMBOL_VXL(get_left_channel)
#endif

#ifndef get_mono_channel
#define get_mono_channel __NS_SYMBOL_VXL(get_mono_channel)
#endif

#ifndef get_right_channel
#define get_right_channel __NS_SYMBOL_VXL(get_right_channel)
#endif

#ifndef haar1
#define haar1 __NS_SYMBOL_VXL(haar1)
#endif

#ifndef hookAvformatCallback
#define hookAvformatCallback __NS_SYMBOL_VXL(hookAvformatCallback)
#endif

#ifndef hysteresis_decision
#define hysteresis_decision __NS_SYMBOL_VXL(hysteresis_decision)
#endif

#ifndef init_caps
#define init_caps __NS_SYMBOL_VXL(init_caps)
#endif

#ifndef isqrt32
#define isqrt32 __NS_SYMBOL_VXL(isqrt32)
#endif

#ifndef libwsclient_cleanup_frames
#define libwsclient_cleanup_frames __NS_SYMBOL_VXL(libwsclient_cleanup_frames)
#endif

#ifndef libwsclient_close
#define libwsclient_close __NS_SYMBOL_VXL(libwsclient_close)
#endif

#ifndef libwsclient_complete_frame
#define libwsclient_complete_frame __NS_SYMBOL_VXL(libwsclient_complete_frame)
#endif

#ifndef libwsclient_dispatch_message
#define libwsclient_dispatch_message __NS_SYMBOL_VXL(libwsclient_dispatch_message)
#endif

#ifndef libwsclient_finish
#define libwsclient_finish __NS_SYMBOL_VXL(libwsclient_finish)
#endif

#ifndef libwsclient_handle_control_frame
#define libwsclient_handle_control_frame __NS_SYMBOL_VXL(libwsclient_handle_control_frame)
#endif

#ifndef libwsclient_handshake_thread
#define libwsclient_handshake_thread __NS_SYMBOL_VXL(libwsclient_handshake_thread)
#endif

#ifndef libwsclient_helper_socket
#define libwsclient_helper_socket __NS_SYMBOL_VXL(libwsclient_helper_socket)
#endif

#ifndef libwsclient_helper_socket_thread
#define libwsclient_helper_socket_thread __NS_SYMBOL_VXL(libwsclient_helper_socket_thread)
#endif

#ifndef libwsclient_in_data
#define libwsclient_in_data __NS_SYMBOL_VXL(libwsclient_in_data)
#endif

#ifndef libwsclient_new
#define libwsclient_new __NS_SYMBOL_VXL(libwsclient_new)
#endif

#ifndef libwsclient_new_error
#define libwsclient_new_error __NS_SYMBOL_VXL(libwsclient_new_error)
#endif

#ifndef libwsclient_onclose
#define libwsclient_onclose __NS_SYMBOL_VXL(libwsclient_onclose)
#endif

#ifndef libwsclient_onerror
#define libwsclient_onerror __NS_SYMBOL_VXL(libwsclient_onerror)
#endif

#ifndef libwsclient_onmessage
#define libwsclient_onmessage __NS_SYMBOL_VXL(libwsclient_onmessage)
#endif

#ifndef libwsclient_onopen
#define libwsclient_onopen __NS_SYMBOL_VXL(libwsclient_onopen)
#endif

#ifndef libwsclient_open_connection
#define libwsclient_open_connection __NS_SYMBOL_VXL(libwsclient_open_connection)
#endif

#ifndef libwsclient_run
#define libwsclient_run __NS_SYMBOL_VXL(libwsclient_run)
#endif

#ifndef libwsclient_run_thread
#define libwsclient_run_thread __NS_SYMBOL_VXL(libwsclient_run_thread)
#endif

#ifndef libwsclient_send
#define libwsclient_send __NS_SYMBOL_VXL(libwsclient_send)
#endif

#ifndef libwsclient_send_fragment
#define libwsclient_send_fragment __NS_SYMBOL_VXL(libwsclient_send_fragment)
#endif

#ifndef log2Amp
#define log2Amp __NS_SYMBOL_VXL(log2Amp)
#endif

#ifndef mlp_process
#define mlp_process __NS_SYMBOL_VXL(mlp_process)
#endif

#ifndef normalise_bands
#define normalise_bands __NS_SYMBOL_VXL(normalise_bands)
#endif

#ifndef optimize_framesize
#define optimize_framesize __NS_SYMBOL_VXL(optimize_framesize)
#endif

#ifndef opus_custom_decoder_ctl
#define opus_custom_decoder_ctl __NS_SYMBOL_VXL(opus_custom_decoder_ctl)
#endif

#ifndef opus_custom_encoder_ctl
#define opus_custom_encoder_ctl __NS_SYMBOL_VXL(opus_custom_encoder_ctl)
#endif

#ifndef opus_custom_mode_create
#define opus_custom_mode_create __NS_SYMBOL_VXL(opus_custom_mode_create)
#endif

#ifndef opus_decode
#define opus_decode __NS_SYMBOL_VXL(opus_decode)
#endif

#ifndef opus_decode_float
#define opus_decode_float __NS_SYMBOL_VXL(opus_decode_float)
#endif

#ifndef opus_decode_native
#define opus_decode_native __NS_SYMBOL_VXL(opus_decode_native)
#endif

#ifndef opus_decoder_create
#define opus_decoder_create __NS_SYMBOL_VXL(opus_decoder_create)
#endif

#ifndef opus_decoder_ctl
#define opus_decoder_ctl __NS_SYMBOL_VXL(opus_decoder_ctl)
#endif

#ifndef opus_decoder_destroy
#define opus_decoder_destroy __NS_SYMBOL_VXL(opus_decoder_destroy)
#endif

#ifndef opus_decoder_get_nb_samples
#define opus_decoder_get_nb_samples __NS_SYMBOL_VXL(opus_decoder_get_nb_samples)
#endif

#ifndef opus_decoder_get_size
#define opus_decoder_get_size __NS_SYMBOL_VXL(opus_decoder_get_size)
#endif

#ifndef opus_decoder_init
#define opus_decoder_init __NS_SYMBOL_VXL(opus_decoder_init)
#endif

#ifndef opus_encode
#define opus_encode __NS_SYMBOL_VXL(opus_encode)
#endif

#ifndef opus_encode_float
#define opus_encode_float __NS_SYMBOL_VXL(opus_encode_float)
#endif

#ifndef opus_encode_native
#define opus_encode_native __NS_SYMBOL_VXL(opus_encode_native)
#endif

#ifndef opus_encoder_create
#define opus_encoder_create __NS_SYMBOL_VXL(opus_encoder_create)
#endif

#ifndef opus_encoder_ctl
#define opus_encoder_ctl __NS_SYMBOL_VXL(opus_encoder_ctl)
#endif

#ifndef opus_encoder_destroy
#define opus_encoder_destroy __NS_SYMBOL_VXL(opus_encoder_destroy)
#endif

#ifndef opus_encoder_get_size
#define opus_encoder_get_size __NS_SYMBOL_VXL(opus_encoder_get_size)
#endif

#ifndef opus_encoder_init
#define opus_encoder_init __NS_SYMBOL_VXL(opus_encoder_init)
#endif

#ifndef opus_fft
#define opus_fft __NS_SYMBOL_VXL(opus_fft)
#endif

#ifndef opus_get_version_string
#define opus_get_version_string __NS_SYMBOL_VXL(opus_get_version_string)
#endif

#ifndef opus_ifft
#define opus_ifft __NS_SYMBOL_VXL(opus_ifft)
#endif

#ifndef opus_multistream_decode
#define opus_multistream_decode __NS_SYMBOL_VXL(opus_multistream_decode)
#endif

#ifndef opus_multistream_decode_float
#define opus_multistream_decode_float __NS_SYMBOL_VXL(opus_multistream_decode_float)
#endif

#ifndef opus_multistream_decoder_create
#define opus_multistream_decoder_create __NS_SYMBOL_VXL(opus_multistream_decoder_create)
#endif

#ifndef opus_multistream_decoder_ctl
#define opus_multistream_decoder_ctl __NS_SYMBOL_VXL(opus_multistream_decoder_ctl)
#endif

#ifndef opus_multistream_decoder_destroy
#define opus_multistream_decoder_destroy __NS_SYMBOL_VXL(opus_multistream_decoder_destroy)
#endif

#ifndef opus_multistream_decoder_get_size
#define opus_multistream_decoder_get_size __NS_SYMBOL_VXL(opus_multistream_decoder_get_size)
#endif

#ifndef opus_multistream_decoder_init
#define opus_multistream_decoder_init __NS_SYMBOL_VXL(opus_multistream_decoder_init)
#endif

#ifndef opus_multistream_encode
#define opus_multistream_encode __NS_SYMBOL_VXL(opus_multistream_encode)
#endif

#ifndef opus_multistream_encode_float
#define opus_multistream_encode_float __NS_SYMBOL_VXL(opus_multistream_encode_float)
#endif

#ifndef opus_multistream_encoder_create
#define opus_multistream_encoder_create __NS_SYMBOL_VXL(opus_multistream_encoder_create)
#endif

#ifndef opus_multistream_encoder_ctl
#define opus_multistream_encoder_ctl __NS_SYMBOL_VXL(opus_multistream_encoder_ctl)
#endif

#ifndef opus_multistream_encoder_destroy
#define opus_multistream_encoder_destroy __NS_SYMBOL_VXL(opus_multistream_encoder_destroy)
#endif

#ifndef opus_multistream_encoder_get_size
#define opus_multistream_encoder_get_size __NS_SYMBOL_VXL(opus_multistream_encoder_get_size)
#endif

#ifndef opus_multistream_encoder_init
#define opus_multistream_encoder_init __NS_SYMBOL_VXL(opus_multistream_encoder_init)
#endif

#ifndef opus_packet_get_bandwidth
#define opus_packet_get_bandwidth __NS_SYMBOL_VXL(opus_packet_get_bandwidth)
#endif

#ifndef opus_packet_get_nb_channels
#define opus_packet_get_nb_channels __NS_SYMBOL_VXL(opus_packet_get_nb_channels)
#endif

#ifndef opus_packet_get_nb_frames
#define opus_packet_get_nb_frames __NS_SYMBOL_VXL(opus_packet_get_nb_frames)
#endif

#ifndef opus_packet_get_nb_samples
#define opus_packet_get_nb_samples __NS_SYMBOL_VXL(opus_packet_get_nb_samples)
#endif

#ifndef opus_packet_get_samples_per_frame
#define opus_packet_get_samples_per_frame __NS_SYMBOL_VXL(opus_packet_get_samples_per_frame)
#endif

#ifndef opus_packet_parse
#define opus_packet_parse __NS_SYMBOL_VXL(opus_packet_parse)
#endif

#ifndef opus_pcm_soft_clip
#define opus_pcm_soft_clip __NS_SYMBOL_VXL(opus_pcm_soft_clip)
#endif

#ifndef opus_repacketizer_cat
#define opus_repacketizer_cat __NS_SYMBOL_VXL(opus_repacketizer_cat)
#endif

#ifndef opus_repacketizer_create
#define opus_repacketizer_create __NS_SYMBOL_VXL(opus_repacketizer_create)
#endif

#ifndef opus_repacketizer_destroy
#define opus_repacketizer_destroy __NS_SYMBOL_VXL(opus_repacketizer_destroy)
#endif

#ifndef opus_repacketizer_get_nb_frames
#define opus_repacketizer_get_nb_frames __NS_SYMBOL_VXL(opus_repacketizer_get_nb_frames)
#endif

#ifndef opus_repacketizer_get_size
#define opus_repacketizer_get_size __NS_SYMBOL_VXL(opus_repacketizer_get_size)
#endif

#ifndef opus_repacketizer_init
#define opus_repacketizer_init __NS_SYMBOL_VXL(opus_repacketizer_init)
#endif

#ifndef opus_repacketizer_out
#define opus_repacketizer_out __NS_SYMBOL_VXL(opus_repacketizer_out)
#endif

#ifndef opus_repacketizer_out_range
#define opus_repacketizer_out_range __NS_SYMBOL_VXL(opus_repacketizer_out_range)
#endif

#ifndef opus_repacketizer_out_range_impl
#define opus_repacketizer_out_range_impl __NS_SYMBOL_VXL(opus_repacketizer_out_range_impl)
#endif

#ifndef opus_strerror
#define opus_strerror __NS_SYMBOL_VXL(opus_strerror)
#endif

#ifndef os_utils_callback_on_main_thread
#define os_utils_callback_on_main_thread __NS_SYMBOL_VXL(os_utils_callback_on_main_thread)
#endif

#ifndef os_utils_create_sdp_file
#define os_utils_create_sdp_file __NS_SYMBOL_VXL(os_utils_create_sdp_file)
#endif

#ifndef patch_transient_decision
#define patch_transient_decision __NS_SYMBOL_VXL(patch_transient_decision)
#endif

#ifndef pitch_downsample
#define pitch_downsample __NS_SYMBOL_VXL(pitch_downsample)
#endif

#ifndef pitch_search
#define pitch_search __NS_SYMBOL_VXL(pitch_search)
#endif

#ifndef protobuf_c_buffer_simple_append
#define protobuf_c_buffer_simple_append __NS_SYMBOL_VXL(protobuf_c_buffer_simple_append)
#endif

#ifndef protobuf_c_enum_descriptor_get_value
#define protobuf_c_enum_descriptor_get_value __NS_SYMBOL_VXL(protobuf_c_enum_descriptor_get_value)
#endif

#ifndef protobuf_c_enum_descriptor_get_value_by_name
#define protobuf_c_enum_descriptor_get_value_by_name __NS_SYMBOL_VXL(protobuf_c_enum_descriptor_get_value_by_name)
#endif

#ifndef protobuf_c_message_descriptor_get_field
#define protobuf_c_message_descriptor_get_field __NS_SYMBOL_VXL(protobuf_c_message_descriptor_get_field)
#endif

#ifndef protobuf_c_message_descriptor_get_field_by_name
#define protobuf_c_message_descriptor_get_field_by_name __NS_SYMBOL_VXL(protobuf_c_message_descriptor_get_field_by_name)
#endif

#ifndef protobuf_c_message_free_unpacked
#define protobuf_c_message_free_unpacked __NS_SYMBOL_VXL(protobuf_c_message_free_unpacked)
#endif

#ifndef protobuf_c_message_get_packed_size
#define protobuf_c_message_get_packed_size __NS_SYMBOL_VXL(protobuf_c_message_get_packed_size)
#endif

#ifndef protobuf_c_message_init
#define protobuf_c_message_init __NS_SYMBOL_VXL(protobuf_c_message_init)
#endif

#ifndef protobuf_c_message_init_generic
#define protobuf_c_message_init_generic __NS_SYMBOL_VXL(protobuf_c_message_init_generic)
#endif

#ifndef protobuf_c_message_pack
#define protobuf_c_message_pack __NS_SYMBOL_VXL(protobuf_c_message_pack)
#endif

#ifndef protobuf_c_message_pack_to_buffer
#define protobuf_c_message_pack_to_buffer __NS_SYMBOL_VXL(protobuf_c_message_pack_to_buffer)
#endif

#ifndef protobuf_c_message_unpack
#define protobuf_c_message_unpack __NS_SYMBOL_VXL(protobuf_c_message_unpack)
#endif

#ifndef protobuf_c_service_descriptor_get_method_by_name
#define protobuf_c_service_descriptor_get_method_by_name __NS_SYMBOL_VXL(protobuf_c_service_descriptor_get_method_by_name)
#endif

#ifndef protobuf_c_service_destroy
#define protobuf_c_service_destroy __NS_SYMBOL_VXL(protobuf_c_service_destroy)
#endif

#ifndef protobuf_c_service_generated_init
#define protobuf_c_service_generated_init __NS_SYMBOL_VXL(protobuf_c_service_generated_init)
#endif

#ifndef protobuf_c_service_invoke_internal
#define protobuf_c_service_invoke_internal __NS_SYMBOL_VXL(protobuf_c_service_invoke_internal)
#endif

#ifndef quant_all_bands
#define quant_all_bands __NS_SYMBOL_VXL(quant_all_bands)
#endif

#ifndef quant_coarse_energy
#define quant_coarse_energy __NS_SYMBOL_VXL(quant_coarse_energy)
#endif

#ifndef quant_energy_finalise
#define quant_energy_finalise __NS_SYMBOL_VXL(quant_energy_finalise)
#endif

#ifndef quant_fine_energy
#define quant_fine_energy __NS_SYMBOL_VXL(quant_fine_energy)
#endif

#ifndef remove_doubling
#define remove_doubling __NS_SYMBOL_VXL(remove_doubling)
#endif

#ifndef renormalise_vector
#define renormalise_vector __NS_SYMBOL_VXL(renormalise_vector)
#endif

#ifndef resampling_factor
#define resampling_factor __NS_SYMBOL_VXL(resampling_factor)
#endif

#ifndef run_analysis
#define run_analysis __NS_SYMBOL_VXL(run_analysis)
#endif

#ifndef silk_A2NLSF
#define silk_A2NLSF __NS_SYMBOL_VXL(silk_A2NLSF)
#endif

#ifndef silk_CNG
#define silk_CNG __NS_SYMBOL_VXL(silk_CNG)
#endif

#ifndef silk_CNG_Reset
#define silk_CNG_Reset __NS_SYMBOL_VXL(silk_CNG_Reset)
#endif

#ifndef silk_Decode
#define silk_Decode __NS_SYMBOL_VXL(silk_Decode)
#endif

#ifndef silk_Encode
#define silk_Encode __NS_SYMBOL_VXL(silk_Encode)
#endif

#ifndef silk_Get_Decoder_Size
#define silk_Get_Decoder_Size __NS_SYMBOL_VXL(silk_Get_Decoder_Size)
#endif

#ifndef silk_Get_Encoder_Size
#define silk_Get_Encoder_Size __NS_SYMBOL_VXL(silk_Get_Encoder_Size)
#endif

#ifndef silk_HP_variable_cutoff
#define silk_HP_variable_cutoff __NS_SYMBOL_VXL(silk_HP_variable_cutoff)
#endif

#ifndef silk_InitDecoder
#define silk_InitDecoder __NS_SYMBOL_VXL(silk_InitDecoder)
#endif

#ifndef silk_InitEncoder
#define silk_InitEncoder __NS_SYMBOL_VXL(silk_InitEncoder)
#endif

#ifndef silk_LPC_analysis_filter
#define silk_LPC_analysis_filter __NS_SYMBOL_VXL(silk_LPC_analysis_filter)
#endif

#ifndef silk_LPC_inverse_pred_gain
#define silk_LPC_inverse_pred_gain __NS_SYMBOL_VXL(silk_LPC_inverse_pred_gain)
#endif

#ifndef silk_LPC_inverse_pred_gain_Q24
#define silk_LPC_inverse_pred_gain_Q24 __NS_SYMBOL_VXL(silk_LPC_inverse_pred_gain_Q24)
#endif

#ifndef silk_LP_variable_cutoff
#define silk_LP_variable_cutoff __NS_SYMBOL_VXL(silk_LP_variable_cutoff)
#endif

#ifndef silk_LTP_analysis_filter_FIX
#define silk_LTP_analysis_filter_FIX __NS_SYMBOL_VXL(silk_LTP_analysis_filter_FIX)
#endif

#ifndef silk_LTP_scale_ctrl_FIX
#define silk_LTP_scale_ctrl_FIX __NS_SYMBOL_VXL(silk_LTP_scale_ctrl_FIX)
#endif

#ifndef silk_NLSF2A
#define silk_NLSF2A __NS_SYMBOL_VXL(silk_NLSF2A)
#endif

#ifndef silk_NLSF_VQ
#define silk_NLSF_VQ __NS_SYMBOL_VXL(silk_NLSF_VQ)
#endif

#ifndef silk_NLSF_VQ_weights_laroia
#define silk_NLSF_VQ_weights_laroia __NS_SYMBOL_VXL(silk_NLSF_VQ_weights_laroia)
#endif

#ifndef silk_NLSF_decode
#define silk_NLSF_decode __NS_SYMBOL_VXL(silk_NLSF_decode)
#endif

#ifndef silk_NLSF_del_dec_quant
#define silk_NLSF_del_dec_quant __NS_SYMBOL_VXL(silk_NLSF_del_dec_quant)
#endif

#ifndef silk_NLSF_encode
#define silk_NLSF_encode __NS_SYMBOL_VXL(silk_NLSF_encode)
#endif

#ifndef silk_NLSF_stabilize
#define silk_NLSF_stabilize __NS_SYMBOL_VXL(silk_NLSF_stabilize)
#endif

#ifndef silk_NLSF_unpack
#define silk_NLSF_unpack __NS_SYMBOL_VXL(silk_NLSF_unpack)
#endif

#ifndef silk_NSQ
#define silk_NSQ __NS_SYMBOL_VXL(silk_NSQ)
#endif

#ifndef silk_NSQ_del_dec
#define silk_NSQ_del_dec __NS_SYMBOL_VXL(silk_NSQ_del_dec)
#endif

#ifndef silk_PLC
#define silk_PLC __NS_SYMBOL_VXL(silk_PLC)
#endif

#ifndef silk_PLC_Reset
#define silk_PLC_Reset __NS_SYMBOL_VXL(silk_PLC_Reset)
#endif

#ifndef silk_PLC_glue_frames
#define silk_PLC_glue_frames __NS_SYMBOL_VXL(silk_PLC_glue_frames)
#endif

#ifndef silk_VAD_GetSA_Q8
#define silk_VAD_GetSA_Q8 __NS_SYMBOL_VXL(silk_VAD_GetSA_Q8)
#endif

#ifndef silk_VAD_Init
#define silk_VAD_Init __NS_SYMBOL_VXL(silk_VAD_Init)
#endif

#ifndef silk_VQ_WMat_EC
#define silk_VQ_WMat_EC __NS_SYMBOL_VXL(silk_VQ_WMat_EC)
#endif

#ifndef silk_ana_filt_bank_1
#define silk_ana_filt_bank_1 __NS_SYMBOL_VXL(silk_ana_filt_bank_1)
#endif

#ifndef silk_apply_sine_window
#define silk_apply_sine_window __NS_SYMBOL_VXL(silk_apply_sine_window)
#endif

#ifndef silk_autocorr
#define silk_autocorr __NS_SYMBOL_VXL(silk_autocorr)
#endif

#ifndef silk_biquad_alt
#define silk_biquad_alt __NS_SYMBOL_VXL(silk_biquad_alt)
#endif

#ifndef silk_burg_modified
#define silk_burg_modified __NS_SYMBOL_VXL(silk_burg_modified)
#endif

#ifndef silk_bwexpander
#define silk_bwexpander __NS_SYMBOL_VXL(silk_bwexpander)
#endif

#ifndef silk_bwexpander_32
#define silk_bwexpander_32 __NS_SYMBOL_VXL(silk_bwexpander_32)
#endif

#ifndef silk_control_SNR
#define silk_control_SNR __NS_SYMBOL_VXL(silk_control_SNR)
#endif

#ifndef silk_control_audio_bandwidth
#define silk_control_audio_bandwidth __NS_SYMBOL_VXL(silk_control_audio_bandwidth)
#endif

#ifndef silk_control_encoder
#define silk_control_encoder __NS_SYMBOL_VXL(silk_control_encoder)
#endif

#ifndef silk_corrMatrix_FIX
#define silk_corrMatrix_FIX __NS_SYMBOL_VXL(silk_corrMatrix_FIX)
#endif

#ifndef silk_corrVector_FIX
#define silk_corrVector_FIX __NS_SYMBOL_VXL(silk_corrVector_FIX)
#endif

#ifndef silk_decode_core
#define silk_decode_core __NS_SYMBOL_VXL(silk_decode_core)
#endif

#ifndef silk_decode_frame
#define silk_decode_frame __NS_SYMBOL_VXL(silk_decode_frame)
#endif

#ifndef silk_decode_indices
#define silk_decode_indices __NS_SYMBOL_VXL(silk_decode_indices)
#endif

#ifndef silk_decode_parameters
#define silk_decode_parameters __NS_SYMBOL_VXL(silk_decode_parameters)
#endif

#ifndef silk_decode_pitch
#define silk_decode_pitch __NS_SYMBOL_VXL(silk_decode_pitch)
#endif

#ifndef silk_decode_pulses
#define silk_decode_pulses __NS_SYMBOL_VXL(silk_decode_pulses)
#endif

#ifndef silk_decode_signs
#define silk_decode_signs __NS_SYMBOL_VXL(silk_decode_signs)
#endif

#ifndef silk_decoder_set_fs
#define silk_decoder_set_fs __NS_SYMBOL_VXL(silk_decoder_set_fs)
#endif

#ifndef silk_encode_do_VAD_FIX
#define silk_encode_do_VAD_FIX __NS_SYMBOL_VXL(silk_encode_do_VAD_FIX)
#endif

#ifndef silk_encode_frame_FIX
#define silk_encode_frame_FIX __NS_SYMBOL_VXL(silk_encode_frame_FIX)
#endif

#ifndef silk_encode_indices
#define silk_encode_indices __NS_SYMBOL_VXL(silk_encode_indices)
#endif

#ifndef silk_encode_pulses
#define silk_encode_pulses __NS_SYMBOL_VXL(silk_encode_pulses)
#endif

#ifndef silk_encode_signs
#define silk_encode_signs __NS_SYMBOL_VXL(silk_encode_signs)
#endif

#ifndef silk_find_LPC_FIX
#define silk_find_LPC_FIX __NS_SYMBOL_VXL(silk_find_LPC_FIX)
#endif

#ifndef silk_find_LTP_FIX
#define silk_find_LTP_FIX __NS_SYMBOL_VXL(silk_find_LTP_FIX)
#endif

#ifndef silk_find_pitch_lags_FIX
#define silk_find_pitch_lags_FIX __NS_SYMBOL_VXL(silk_find_pitch_lags_FIX)
#endif

#ifndef silk_find_pred_coefs_FIX
#define silk_find_pred_coefs_FIX __NS_SYMBOL_VXL(silk_find_pred_coefs_FIX)
#endif

#ifndef silk_fit_LTP
#define silk_fit_LTP __NS_SYMBOL_VXL(silk_fit_LTP)
#endif

#ifndef silk_gains_ID
#define silk_gains_ID __NS_SYMBOL_VXL(silk_gains_ID)
#endif

#ifndef silk_gains_dequant
#define silk_gains_dequant __NS_SYMBOL_VXL(silk_gains_dequant)
#endif

#ifndef silk_gains_quant
#define silk_gains_quant __NS_SYMBOL_VXL(silk_gains_quant)
#endif

#ifndef silk_init_decoder
#define silk_init_decoder __NS_SYMBOL_VXL(silk_init_decoder)
#endif

#ifndef silk_init_encoder
#define silk_init_encoder __NS_SYMBOL_VXL(silk_init_encoder)
#endif

#ifndef silk_inner_prod16_aligned_64
#define silk_inner_prod16_aligned_64 __NS_SYMBOL_VXL(silk_inner_prod16_aligned_64)
#endif

#ifndef silk_inner_prod_aligned
#define silk_inner_prod_aligned __NS_SYMBOL_VXL(silk_inner_prod_aligned)
#endif

#ifndef silk_inner_prod_aligned_scale
#define silk_inner_prod_aligned_scale __NS_SYMBOL_VXL(silk_inner_prod_aligned_scale)
#endif

#ifndef silk_insertion_sort_decreasing_int16
#define silk_insertion_sort_decreasing_int16 __NS_SYMBOL_VXL(silk_insertion_sort_decreasing_int16)
#endif

#ifndef silk_insertion_sort_increasing
#define silk_insertion_sort_increasing __NS_SYMBOL_VXL(silk_insertion_sort_increasing)
#endif

#ifndef silk_insertion_sort_increasing_all_values_int16
#define silk_insertion_sort_increasing_all_values_int16 __NS_SYMBOL_VXL(silk_insertion_sort_increasing_all_values_int16)
#endif

#ifndef silk_interpolate
#define silk_interpolate __NS_SYMBOL_VXL(silk_interpolate)
#endif

#ifndef silk_k2a
#define silk_k2a __NS_SYMBOL_VXL(silk_k2a)
#endif

#ifndef silk_k2a_Q16
#define silk_k2a_Q16 __NS_SYMBOL_VXL(silk_k2a_Q16)
#endif

#ifndef silk_lin2log
#define silk_lin2log __NS_SYMBOL_VXL(silk_lin2log)
#endif

#ifndef silk_log2lin
#define silk_log2lin __NS_SYMBOL_VXL(silk_log2lin)
#endif

#ifndef silk_noise_shape_analysis_FIX
#define silk_noise_shape_analysis_FIX __NS_SYMBOL_VXL(silk_noise_shape_analysis_FIX)
#endif

#ifndef silk_pitch_analysis_core
#define silk_pitch_analysis_core __NS_SYMBOL_VXL(silk_pitch_analysis_core)
#endif

#ifndef silk_prefilter_FIX
#define silk_prefilter_FIX __NS_SYMBOL_VXL(silk_prefilter_FIX)
#endif

#ifndef silk_process_NLSFs
#define silk_process_NLSFs __NS_SYMBOL_VXL(silk_process_NLSFs)
#endif

#ifndef silk_process_gains_FIX
#define silk_process_gains_FIX __NS_SYMBOL_VXL(silk_process_gains_FIX)
#endif

#ifndef silk_quant_LTP_gains
#define silk_quant_LTP_gains __NS_SYMBOL_VXL(silk_quant_LTP_gains)
#endif

#ifndef silk_regularize_correlations_FIX
#define silk_regularize_correlations_FIX __NS_SYMBOL_VXL(silk_regularize_correlations_FIX)
#endif

#ifndef silk_resampler
#define silk_resampler __NS_SYMBOL_VXL(silk_resampler)
#endif

#ifndef silk_resampler_down2
#define silk_resampler_down2 __NS_SYMBOL_VXL(silk_resampler_down2)
#endif

#ifndef silk_resampler_down2_3
#define silk_resampler_down2_3 __NS_SYMBOL_VXL(silk_resampler_down2_3)
#endif

#ifndef silk_resampler_init
#define silk_resampler_init __NS_SYMBOL_VXL(silk_resampler_init)
#endif

#ifndef silk_resampler_private_AR2
#define silk_resampler_private_AR2 __NS_SYMBOL_VXL(silk_resampler_private_AR2)
#endif

#ifndef silk_resampler_private_IIR_FIR
#define silk_resampler_private_IIR_FIR __NS_SYMBOL_VXL(silk_resampler_private_IIR_FIR)
#endif

#ifndef silk_resampler_private_down_FIR
#define silk_resampler_private_down_FIR __NS_SYMBOL_VXL(silk_resampler_private_down_FIR)
#endif

#ifndef silk_resampler_private_up2_HQ
#define silk_resampler_private_up2_HQ __NS_SYMBOL_VXL(silk_resampler_private_up2_HQ)
#endif

#ifndef silk_resampler_private_up2_HQ_wrapper
#define silk_resampler_private_up2_HQ_wrapper __NS_SYMBOL_VXL(silk_resampler_private_up2_HQ_wrapper)
#endif

#ifndef silk_residual_energy16_covar_FIX
#define silk_residual_energy16_covar_FIX __NS_SYMBOL_VXL(silk_residual_energy16_covar_FIX)
#endif

#ifndef silk_residual_energy_FIX
#define silk_residual_energy_FIX __NS_SYMBOL_VXL(silk_residual_energy_FIX)
#endif

#ifndef silk_scale_copy_vector16
#define silk_scale_copy_vector16 __NS_SYMBOL_VXL(silk_scale_copy_vector16)
#endif

#ifndef silk_scale_vector32_Q26_lshift_18
#define silk_scale_vector32_Q26_lshift_18 __NS_SYMBOL_VXL(silk_scale_vector32_Q26_lshift_18)
#endif

#ifndef silk_schur
#define silk_schur __NS_SYMBOL_VXL(silk_schur)
#endif

#ifndef silk_schur64
#define silk_schur64 __NS_SYMBOL_VXL(silk_schur64)
#endif

#ifndef silk_shell_decoder
#define silk_shell_decoder __NS_SYMBOL_VXL(silk_shell_decoder)
#endif

#ifndef silk_shell_encoder
#define silk_shell_encoder __NS_SYMBOL_VXL(silk_shell_encoder)
#endif

#ifndef silk_sigm_Q15
#define silk_sigm_Q15 __NS_SYMBOL_VXL(silk_sigm_Q15)
#endif

#ifndef silk_solve_LDL_FIX
#define silk_solve_LDL_FIX __NS_SYMBOL_VXL(silk_solve_LDL_FIX)
#endif

#ifndef silk_stereo_LR_to_MS
#define silk_stereo_LR_to_MS __NS_SYMBOL_VXL(silk_stereo_LR_to_MS)
#endif

#ifndef silk_stereo_MS_to_LR
#define silk_stereo_MS_to_LR __NS_SYMBOL_VXL(silk_stereo_MS_to_LR)
#endif

#ifndef silk_stereo_decode_mid_only
#define silk_stereo_decode_mid_only __NS_SYMBOL_VXL(silk_stereo_decode_mid_only)
#endif

#ifndef silk_stereo_decode_pred
#define silk_stereo_decode_pred __NS_SYMBOL_VXL(silk_stereo_decode_pred)
#endif

#ifndef silk_stereo_encode_mid_only
#define silk_stereo_encode_mid_only __NS_SYMBOL_VXL(silk_stereo_encode_mid_only)
#endif

#ifndef silk_stereo_encode_pred
#define silk_stereo_encode_pred __NS_SYMBOL_VXL(silk_stereo_encode_pred)
#endif

#ifndef silk_stereo_find_predictor
#define silk_stereo_find_predictor __NS_SYMBOL_VXL(silk_stereo_find_predictor)
#endif

#ifndef silk_stereo_quant_pred
#define silk_stereo_quant_pred __NS_SYMBOL_VXL(silk_stereo_quant_pred)
#endif

#ifndef silk_sum_sqr_shift
#define silk_sum_sqr_shift __NS_SYMBOL_VXL(silk_sum_sqr_shift)
#endif

#ifndef silk_warped_LPC_analysis_filter_FIX
#define silk_warped_LPC_analysis_filter_FIX __NS_SYMBOL_VXL(silk_warped_LPC_analysis_filter_FIX)
#endif

#ifndef silk_warped_autocorrelation_FIX
#define silk_warped_autocorrelation_FIX __NS_SYMBOL_VXL(silk_warped_autocorrelation_FIX)
#endif

#ifndef spreading_decision
#define spreading_decision __NS_SYMBOL_VXL(spreading_decision)
#endif

#ifndef stereo_itheta
#define stereo_itheta __NS_SYMBOL_VXL(stereo_itheta)
#endif

#ifndef stricmp
#define stricmp __NS_SYMBOL_VXL(stricmp)
#endif

#ifndef tonality_analysis
#define tonality_analysis __NS_SYMBOL_VXL(tonality_analysis)
#endif

#ifndef tonality_get_info
#define tonality_get_info __NS_SYMBOL_VXL(tonality_get_info)
#endif

#ifndef unquant_coarse_energy
#define unquant_coarse_energy __NS_SYMBOL_VXL(unquant_coarse_energy)
#endif

#ifndef unquant_energy_finalise
#define unquant_energy_finalise __NS_SYMBOL_VXL(unquant_energy_finalise)
#endif

#ifndef unquant_fine_energy
#define unquant_fine_energy __NS_SYMBOL_VXL(unquant_fine_energy)
#endif

#ifndef url_feof
#define url_feof __NS_SYMBOL_VXL(url_feof)
#endif

#ifndef validate_layout
#define validate_layout __NS_SYMBOL_VXL(validate_layout)
#endif

#ifndef vxl_decode_destroy
#define vxl_decode_destroy __NS_SYMBOL_VXL(vxl_decode_destroy)
#endif

#ifndef vxl_decode_exit_with_callback
#define vxl_decode_exit_with_callback __NS_SYMBOL_VXL(vxl_decode_exit_with_callback)
#endif

#ifndef vxl_decode_frame
#define vxl_decode_frame __NS_SYMBOL_VXL(vxl_decode_frame)
#endif

#ifndef vxl_decode_latency
#define vxl_decode_latency __NS_SYMBOL_VXL(vxl_decode_latency)
#endif

#ifndef vxl_decode_lock_data
#define vxl_decode_lock_data __NS_SYMBOL_VXL(vxl_decode_lock_data)
#endif

#ifndef vxl_decode_new
#define vxl_decode_new __NS_SYMBOL_VXL(vxl_decode_new)
#endif

#ifndef vxl_decode_next_frame
#define vxl_decode_next_frame __NS_SYMBOL_VXL(vxl_decode_next_frame)
#endif

#ifndef vxl_decode_next_unit
#define vxl_decode_next_unit __NS_SYMBOL_VXL(vxl_decode_next_unit)
#endif

#ifndef vxl_decode_session_stats
#define vxl_decode_session_stats __NS_SYMBOL_VXL(vxl_decode_session_stats)
#endif

#ifndef vxl_decode_stop
#define vxl_decode_stop __NS_SYMBOL_VXL(vxl_decode_stop)
#endif

#ifndef vxl_decode_unlock_data
#define vxl_decode_unlock_data __NS_SYMBOL_VXL(vxl_decode_unlock_data)
#endif

#ifndef vxl_demuxer_can_start_stream
#define vxl_demuxer_can_start_stream __NS_SYMBOL_VXL(vxl_demuxer_can_start_stream)
#endif

#ifndef vxl_demuxer_destroy
#define vxl_demuxer_destroy __NS_SYMBOL_VXL(vxl_demuxer_destroy)
#endif

#ifndef vxl_demuxer_new
#define vxl_demuxer_new __NS_SYMBOL_VXL(vxl_demuxer_new)
#endif

#ifndef vxl_demuxer_next_audio_frame
#define vxl_demuxer_next_audio_frame __NS_SYMBOL_VXL(vxl_demuxer_next_audio_frame)
#endif

#ifndef vxl_demuxer_next_video_frame
#define vxl_demuxer_next_video_frame __NS_SYMBOL_VXL(vxl_demuxer_next_video_frame)
#endif

#ifndef vxl_demuxer_reset
#define vxl_demuxer_reset __NS_SYMBOL_VXL(vxl_demuxer_reset)
#endif

#ifndef vxl_gl_destroy_renderer
#define vxl_gl_destroy_renderer __NS_SYMBOL_VXL(vxl_gl_destroy_renderer)
#endif

#ifndef vxl_gl_init_renderer
#define vxl_gl_init_renderer __NS_SYMBOL_VXL(vxl_gl_init_renderer)
#endif

#ifndef vxl_gl_render
#define vxl_gl_render __NS_SYMBOL_VXL(vxl_gl_render)
#endif

#ifndef vxl_gl_renderer_update_container_size
#define vxl_gl_renderer_update_container_size __NS_SYMBOL_VXL(vxl_gl_renderer_update_container_size)
#endif

#ifndef vxl_internal_debug_check_rtp
#define vxl_internal_debug_check_rtp __NS_SYMBOL_VXL(vxl_internal_debug_check_rtp)
#endif

#ifndef vxl_internal_tcp_recv
#define vxl_internal_tcp_recv __NS_SYMBOL_VXL(vxl_internal_tcp_recv)
#endif

#ifndef vxl_internal_tcp_send
#define vxl_internal_tcp_send __NS_SYMBOL_VXL(vxl_internal_tcp_send)
#endif

#ifndef vxl_internal_tcp_socket_nodelay
#define vxl_internal_tcp_socket_nodelay __NS_SYMBOL_VXL(vxl_internal_tcp_socket_nodelay)
#endif

#ifndef vxl_internal_tcp_socket_nonblock
#define vxl_internal_tcp_socket_nonblock __NS_SYMBOL_VXL(vxl_internal_tcp_socket_nonblock)
#endif

#ifndef vxl_internal_udp_open
#define vxl_internal_udp_open __NS_SYMBOL_VXL(vxl_internal_udp_open)
#endif

#ifndef vxl_internal_update_recv_bandwidth_stats
#define vxl_internal_update_recv_bandwidth_stats __NS_SYMBOL_VXL(vxl_internal_update_recv_bandwidth_stats)
#endif

#ifndef vxl_latency_destroy
#define vxl_latency_destroy __NS_SYMBOL_VXL(vxl_latency_destroy)
#endif

#ifndef vxl_latency_new
#define vxl_latency_new __NS_SYMBOL_VXL(vxl_latency_new)
#endif

#ifndef vxl_latency_start
#define vxl_latency_start __NS_SYMBOL_VXL(vxl_latency_start)
#endif

#ifndef vxl_latency_stop
#define vxl_latency_stop __NS_SYMBOL_VXL(vxl_latency_stop)
#endif

#ifndef vxl_wsclient_connect
#define vxl_wsclient_connect __NS_SYMBOL_VXL(vxl_wsclient_connect)
#endif

#ifndef vxl_wsclient_connect_udp_stream
#define vxl_wsclient_connect_udp_stream __NS_SYMBOL_VXL(vxl_wsclient_connect_udp_stream)
#endif

#ifndef vxl_wsclient_destroy
#define vxl_wsclient_destroy __NS_SYMBOL_VXL(vxl_wsclient_destroy)
#endif

#ifndef vxl_wsclient_new
#define vxl_wsclient_new __NS_SYMBOL_VXL(vxl_wsclient_new)
#endif

#ifndef vxl_wsclient_send_json
#define vxl_wsclient_send_json __NS_SYMBOL_VXL(vxl_wsclient_send_json)
#endif

#ifndef vxl_wsclient_send_udp_data
#define vxl_wsclient_send_udp_data __NS_SYMBOL_VXL(vxl_wsclient_send_udp_data)
#endif

#ifndef vxl_wsclient_set_sync_key
#define vxl_wsclient_set_sync_key __NS_SYMBOL_VXL(vxl_wsclient_set_sync_key)
#endif

#ifndef vxl_wsclient_stop
#define vxl_wsclient_stop __NS_SYMBOL_VXL(vxl_wsclient_stop)
#endif

#ifndef vxl_wsclient_stop_ex
#define vxl_wsclient_stop_ex __NS_SYMBOL_VXL(vxl_wsclient_stop_ex)
#endif

#ifndef wh_decode_begin
#define wh_decode_begin __NS_SYMBOL_VXL(wh_decode_begin)
#endif

#ifndef wh_decode_block_count
#define wh_decode_block_count __NS_SYMBOL_VXL(wh_decode_block_count)
#endif

#ifndef wh_decode_destroy
#define wh_decode_destroy __NS_SYMBOL_VXL(wh_decode_destroy)
#endif

#ifndef wh_decode_init
#define wh_decode_init __NS_SYMBOL_VXL(wh_decode_init)
#endif

#ifndef wh_decode_step
#define wh_decode_step __NS_SYMBOL_VXL(wh_decode_step)
#endif

#ifndef wh_encode_begin
#define wh_encode_begin __NS_SYMBOL_VXL(wh_encode_begin)
#endif

#ifndef wh_encode_block_count
#define wh_encode_block_count __NS_SYMBOL_VXL(wh_encode_block_count)
#endif

#ifndef wh_encode_destroy
#define wh_encode_destroy __NS_SYMBOL_VXL(wh_encode_destroy)
#endif

#ifndef wh_encode_init
#define wh_encode_init __NS_SYMBOL_VXL(wh_encode_init)
#endif

#ifndef wh_encode_step
#define wh_encode_step __NS_SYMBOL_VXL(wh_encode_step)
#endif

// Externs
#ifndef BASE64_CHARS
#define BASE64_CHARS __NS_SYMBOL_VXL(BASE64_CHARS)
#endif

#ifndef VXLLogTag
#define VXLLogTag __NS_SYMBOL_VXL(VXLLogTag)
#endif

#ifndef ff_file_protocol
#define ff_file_protocol __NS_SYMBOL_VXL(ff_file_protocol)
#endif

#ifndef ff_h264_decoder
#define ff_h264_decoder __NS_SYMBOL_VXL(ff_h264_decoder)
#endif

#ifndef ff_h264_dynamic_handler
#define ff_h264_dynamic_handler __NS_SYMBOL_VXL(ff_h264_dynamic_handler)
#endif

#ifndef ff_rtp_protocol
#define ff_rtp_protocol __NS_SYMBOL_VXL(ff_rtp_protocol)
#endif

#ifndef ff_sdp_demuxer
#define ff_sdp_demuxer __NS_SYMBOL_VXL(ff_sdp_demuxer)
#endif

#ifndef ff_tcp_protocol
#define ff_tcp_protocol __NS_SYMBOL_VXL(ff_tcp_protocol)
#endif

#ifndef ff_udp_protocol
#define ff_udp_protocol __NS_SYMBOL_VXL(ff_udp_protocol)
#endif

#ifndef g_nal_complete
#define g_nal_complete __NS_SYMBOL_VXL(g_nal_complete)
#endif

#ifndef kWSConnectionTimeout
#define kWSConnectionTimeout __NS_SYMBOL_VXL(kWSConnectionTimeout)
#endif

#ifndef protobuf_c_default_allocator
#define protobuf_c_default_allocator __NS_SYMBOL_VXL(protobuf_c_default_allocator)
#endif

#ifndef protobuf_c_out_of_memory
#define protobuf_c_out_of_memory __NS_SYMBOL_VXL(protobuf_c_out_of_memory)
#endif

#ifndef protobuf_c_system_allocator
#define protobuf_c_system_allocator __NS_SYMBOL_VXL(protobuf_c_system_allocator)
#endif

#ifndef vxl_log_tag
#define vxl_log_tag __NS_SYMBOL_VXL(vxl_log_tag)
#endif

#ifndef AsyncSocketQueueName
#define AsyncSocketQueueName __NS_SYMBOL_VXL(AsyncSocketQueueName)
#endif

#ifndef AsyncSocketThreadName
#define AsyncSocketThreadName __NS_SYMBOL_VXL(AsyncSocketThreadName)
#endif

#ifndef VXLAdPrefetchFailNotification
#define VXLAdPrefetchFailNotification __NS_SYMBOL_VXL(VXLAdPrefetchFailNotification)
#endif

#ifndef VXLAdPrefetchSuccessNotification
#define VXLAdPrefetchSuccessNotification __NS_SYMBOL_VXL(VXLAdPrefetchSuccessNotification)
#endif

#ifndef VXLAdPrefetchSuccessNotificationUserInfoCampaignIdKey
#define VXLAdPrefetchSuccessNotificationUserInfoCampaignIdKey __NS_SYMBOL_VXL(VXLAdPrefetchSuccessNotificationUserInfoCampaignIdKey)
#endif

#ifndef VXLAdPrefetchSuccessNotificationUserInfoCampaignKey
#define VXLAdPrefetchSuccessNotificationUserInfoCampaignKey __NS_SYMBOL_VXL(VXLAdPrefetchSuccessNotificationUserInfoCampaignKey)
#endif

#ifndef VXLClientConnectionOptionAppId
#define VXLClientConnectionOptionAppId __NS_SYMBOL_VXL(VXLClientConnectionOptionAppId)
#endif

#ifndef VXLClientConnectionOptionBitrate
#define VXLClientConnectionOptionBitrate __NS_SYMBOL_VXL(VXLClientConnectionOptionBitrate)
#endif

#ifndef VXLClientConnectionOptionCampaignId
#define VXLClientConnectionOptionCampaignId __NS_SYMBOL_VXL(VXLClientConnectionOptionCampaignId)
#endif

#ifndef VXLClientConnectionOptionDatacenterName
#define VXLClientConnectionOptionDatacenterName __NS_SYMBOL_VXL(VXLClientConnectionOptionDatacenterName)
#endif

#ifndef VXLClientConnectionOptionDeviceType
#define VXLClientConnectionOptionDeviceType __NS_SYMBOL_VXL(VXLClientConnectionOptionDeviceType)
#endif

#ifndef VXLClientConnectionOptionDisplayPlayback
#define VXLClientConnectionOptionDisplayPlayback __NS_SYMBOL_VXL(VXLClientConnectionOptionDisplayPlayback)
#endif

#ifndef VXLClientConnectionOptionEndUserID
#define VXLClientConnectionOptionEndUserID __NS_SYMBOL_VXL(VXLClientConnectionOptionEndUserID)
#endif

#ifndef VXLClientConnectionOptionFEC
#define VXLClientConnectionOptionFEC __NS_SYMBOL_VXL(VXLClientConnectionOptionFEC)
#endif

#ifndef VXLClientConnectionOptionFramesPerSecond
#define VXLClientConnectionOptionFramesPerSecond __NS_SYMBOL_VXL(VXLClientConnectionOptionFramesPerSecond)
#endif

#ifndef VXLClientConnectionOptionIntraRefresh
#define VXLClientConnectionOptionIntraRefresh __NS_SYMBOL_VXL(VXLClientConnectionOptionIntraRefresh)
#endif

#ifndef VXLClientConnectionOptionNetworkProtocol
#define VXLClientConnectionOptionNetworkProtocol __NS_SYMBOL_VXL(VXLClientConnectionOptionNetworkProtocol)
#endif

#ifndef VXLClientConnectionOptionPacketSize
#define VXLClientConnectionOptionPacketSize __NS_SYMBOL_VXL(VXLClientConnectionOptionPacketSize)
#endif

#ifndef VXLClientConnectionOptionRecordTouchEvent
#define VXLClientConnectionOptionRecordTouchEvent __NS_SYMBOL_VXL(VXLClientConnectionOptionRecordTouchEvent)
#endif

#ifndef VXLClientConnectionOptionSaveAppData
#define VXLClientConnectionOptionSaveAppData __NS_SYMBOL_VXL(VXLClientConnectionOptionSaveAppData)
#endif

#ifndef VXLClientConnectionOptionScale
#define VXLClientConnectionOptionScale __NS_SYMBOL_VXL(VXLClientConnectionOptionScale)
#endif

#ifndef VXLClientConnectionOptionServerName
#define VXLClientConnectionOptionServerName __NS_SYMBOL_VXL(VXLClientConnectionOptionServerName)
#endif

#ifndef VXLClientConnectionOptionServerPort
#define VXLClientConnectionOptionServerPort __NS_SYMBOL_VXL(VXLClientConnectionOptionServerPort)
#endif

#ifndef VXLClientConnectionOptionStretch
#define VXLClientConnectionOptionStretch __NS_SYMBOL_VXL(VXLClientConnectionOptionStretch)
#endif

#ifndef VXLClientOfflineNotification
#define VXLClientOfflineNotification __NS_SYMBOL_VXL(VXLClientOfflineNotification)
#endif

#ifndef VXLClientOnlineNotification
#define VXLClientOnlineNotification __NS_SYMBOL_VXL(VXLClientOnlineNotification)
#endif

#ifndef VXLClientPlayerOptionBlurEnabled
#define VXLClientPlayerOptionBlurEnabled __NS_SYMBOL_VXL(VXLClientPlayerOptionBlurEnabled)
#endif

#ifndef VXLClientPlayerOptionCampaign
#define VXLClientPlayerOptionCampaign __NS_SYMBOL_VXL(VXLClientPlayerOptionCampaign)
#endif

#ifndef VXLClientProtocolOptionsAudioCodecKey
#define VXLClientProtocolOptionsAudioCodecKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioCodecKey)
#endif

#ifndef VXLClientProtocolOptionsAudioCodecOptionsChannels
#define VXLClientProtocolOptionsAudioCodecOptionsChannels __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioCodecOptionsChannels)
#endif

#ifndef VXLClientProtocolOptionsAudioCodecOptionsKey
#define VXLClientProtocolOptionsAudioCodecOptionsKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioCodecOptionsKey)
#endif

#ifndef VXLClientProtocolOptionsAudioCodecOptionsSampleRate
#define VXLClientProtocolOptionsAudioCodecOptionsSampleRate __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioCodecOptionsSampleRate)
#endif

#ifndef VXLClientProtocolOptionsAudioCodecTypeAAC
#define VXLClientProtocolOptionsAudioCodecTypeAAC __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioCodecTypeAAC)
#endif

#ifndef VXLClientProtocolOptionsAudioCodecTypeOpus
#define VXLClientProtocolOptionsAudioCodecTypeOpus __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioCodecTypeOpus)
#endif

#ifndef VXLClientProtocolOptionsAudioEnabledKey
#define VXLClientProtocolOptionsAudioEnabledKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioEnabledKey)
#endif

#ifndef VXLClientProtocolOptionsAudioTransportKey
#define VXLClientProtocolOptionsAudioTransportKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioTransportKey)
#endif

#ifndef VXLClientProtocolOptionsAudioTransportOptionsKey
#define VXLClientProtocolOptionsAudioTransportOptionsKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioTransportOptionsKey)
#endif

#ifndef VXLClientProtocolOptionsAudioTransportTypeDoubleTime
#define VXLClientProtocolOptionsAudioTransportTypeDoubleTime __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioTransportTypeDoubleTime)
#endif

#ifndef VXLClientProtocolOptionsAudioTransportTypeWebSocket
#define VXLClientProtocolOptionsAudioTransportTypeWebSocket __NS_SYMBOL_VXL(VXLClientProtocolOptionsAudioTransportTypeWebSocket)
#endif

#ifndef VXLClientProtocolOptionsFECKey
#define VXLClientProtocolOptionsFECKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsFECKey)
#endif

#ifndef VXLClientProtocolOptionsFECOptionsGroupSize
#define VXLClientProtocolOptionsFECOptionsGroupSize __NS_SYMBOL_VXL(VXLClientProtocolOptionsFECOptionsGroupSize)
#endif

#ifndef VXLClientProtocolOptionsFECOptionsKey
#define VXLClientProtocolOptionsFECOptionsKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsFECOptionsKey)
#endif

#ifndef VXLClientProtocolOptionsFECTypeWirehair
#define VXLClientProtocolOptionsFECTypeWirehair __NS_SYMBOL_VXL(VXLClientProtocolOptionsFECTypeWirehair)
#endif

#ifndef VXLClientProtocolOptionsTouchKey
#define VXLClientProtocolOptionsTouchKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsTouchKey)
#endif

#ifndef VXLClientProtocolOptionsTouchTypeDoubleTime
#define VXLClientProtocolOptionsTouchTypeDoubleTime __NS_SYMBOL_VXL(VXLClientProtocolOptionsTouchTypeDoubleTime)
#endif

#ifndef VXLClientProtocolOptionsTouchTypeJS
#define VXLClientProtocolOptionsTouchTypeJS __NS_SYMBOL_VXL(VXLClientProtocolOptionsTouchTypeJS)
#endif

#ifndef VXLClientProtocolOptionsVideoCodecKey
#define VXLClientProtocolOptionsVideoCodecKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoCodecKey)
#endif

#ifndef VXLClientProtocolOptionsVideoCodecOptionsKey
#define VXLClientProtocolOptionsVideoCodecOptionsKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoCodecOptionsKey)
#endif

#ifndef VXLClientProtocolOptionsVideoCodecTypeH264
#define VXLClientProtocolOptionsVideoCodecTypeH264 __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoCodecTypeH264)
#endif

#ifndef VXLClientProtocolOptionsVideoCodecTypeJS
#define VXLClientProtocolOptionsVideoCodecTypeJS __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoCodecTypeJS)
#endif

#ifndef VXLClientProtocolOptionsVideoTransportKey
#define VXLClientProtocolOptionsVideoTransportKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoTransportKey)
#endif

#ifndef VXLClientProtocolOptionsVideoTransportOptionsKey
#define VXLClientProtocolOptionsVideoTransportOptionsKey __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoTransportOptionsKey)
#endif

#ifndef VXLClientProtocolOptionsVideoTransportOptionsRTPMaxDelay
#define VXLClientProtocolOptionsVideoTransportOptionsRTPMaxDelay __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoTransportOptionsRTPMaxDelay)
#endif

#ifndef VXLClientProtocolOptionsVideoTransportOptionsRTPQueueSize
#define VXLClientProtocolOptionsVideoTransportOptionsRTPQueueSize __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoTransportOptionsRTPQueueSize)
#endif

#ifndef VXLClientProtocolOptionsVideoTransportTypeRTP
#define VXLClientProtocolOptionsVideoTransportTypeRTP __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoTransportTypeRTP)
#endif

#ifndef VXLClientProtocolOptionsVideoTransportTypeWebSocket
#define VXLClientProtocolOptionsVideoTransportTypeWebSocket __NS_SYMBOL_VXL(VXLClientProtocolOptionsVideoTransportTypeWebSocket)
#endif

#ifndef VXLClientServerName
#define VXLClientServerName __NS_SYMBOL_VXL(VXLClientServerName)
#endif

#ifndef VXLClientServerPort
#define VXLClientServerPort __NS_SYMBOL_VXL(VXLClientServerPort)
#endif

#ifndef VXLConnectionMonitorClientAvailableCampaigns
#define VXLConnectionMonitorClientAvailableCampaigns __NS_SYMBOL_VXL(VXLConnectionMonitorClientAvailableCampaigns)
#endif

#ifndef VXLConnectionMonitorClientDisabledCampaigns
#define VXLConnectionMonitorClientDisabledCampaigns __NS_SYMBOL_VXL(VXLConnectionMonitorClientDisabledCampaigns)
#endif

#ifndef VXLConnectionMonitorClientIsBlurEnabled
#define VXLConnectionMonitorClientIsBlurEnabled __NS_SYMBOL_VXL(VXLConnectionMonitorClientIsBlurEnabled)
#endif

#ifndef VXLConnectionMonitorClientIsEnabled
#define VXLConnectionMonitorClientIsEnabled __NS_SYMBOL_VXL(VXLConnectionMonitorClientIsEnabled)
#endif

#ifndef VXLConnectionMonitorClientMinKbpsToPlay
#define VXLConnectionMonitorClientMinKbpsToPlay __NS_SYMBOL_VXL(VXLConnectionMonitorClientMinKbpsToPlay)
#endif

#ifndef VXLConnectionMonitorClientShouldRunLatencyTest
#define VXLConnectionMonitorClientShouldRunLatencyTest __NS_SYMBOL_VXL(VXLConnectionMonitorClientShouldRunLatencyTest)
#endif

#ifndef VXLConnectionMonitorShouldReinitializeNotification
#define VXLConnectionMonitorShouldReinitializeNotification __NS_SYMBOL_VXL(VXLConnectionMonitorShouldReinitializeNotification)
#endif

#ifndef VXLDeviceInfoAppStoreType
#define VXLDeviceInfoAppStoreType __NS_SYMBOL_VXL(VXLDeviceInfoAppStoreType)
#endif

#ifndef VXLDeviceInfoCanNativeRender
#define VXLDeviceInfoCanNativeRender __NS_SYMBOL_VXL(VXLDeviceInfoCanNativeRender)
#endif

#ifndef VXLDeviceInfoCurrentOrientation
#define VXLDeviceInfoCurrentOrientation __NS_SYMBOL_VXL(VXLDeviceInfoCurrentOrientation)
#endif

#ifndef VXLDeviceInfoFormFactor
#define VXLDeviceInfoFormFactor __NS_SYMBOL_VXL(VXLDeviceInfoFormFactor)
#endif

#ifndef VXLDeviceInfoModel
#define VXLDeviceInfoModel __NS_SYMBOL_VXL(VXLDeviceInfoModel)
#endif

#ifndef VXLDeviceInfoPlatform
#define VXLDeviceInfoPlatform __NS_SYMBOL_VXL(VXLDeviceInfoPlatform)
#endif

#ifndef VXLDeviceInfoPlatformVersion
#define VXLDeviceInfoPlatformVersion __NS_SYMBOL_VXL(VXLDeviceInfoPlatformVersion)
#endif

#ifndef VXLDeviceInfoPreferredLanguage
#define VXLDeviceInfoPreferredLanguage __NS_SYMBOL_VXL(VXLDeviceInfoPreferredLanguage)
#endif

#ifndef VXLDeviceInfoSDKVersion
#define VXLDeviceInfoSDKVersion __NS_SYMBOL_VXL(VXLDeviceInfoSDKVersion)
#endif

#ifndef VXLDeviceInfoScreenHeight
#define VXLDeviceInfoScreenHeight __NS_SYMBOL_VXL(VXLDeviceInfoScreenHeight)
#endif

#ifndef VXLDeviceInfoScreenWidth
#define VXLDeviceInfoScreenWidth __NS_SYMBOL_VXL(VXLDeviceInfoScreenWidth)
#endif

#ifndef VXLDeviceInfoUseRTPStack
#define VXLDeviceInfoUseRTPStack __NS_SYMBOL_VXL(VXLDeviceInfoUseRTPStack)
#endif

#ifndef VXLDeviceInfoVendor
#define VXLDeviceInfoVendor __NS_SYMBOL_VXL(VXLDeviceInfoVendor)
#endif

#ifndef VXLSessionEndReasonAppBackgrounded
#define VXLSessionEndReasonAppBackgrounded __NS_SYMBOL_VXL(VXLSessionEndReasonAppBackgrounded)
#endif

#ifndef VXLSessionEndReasonNetworkOtherError
#define VXLSessionEndReasonNetworkOtherError __NS_SYMBOL_VXL(VXLSessionEndReasonNetworkOtherError)
#endif

#ifndef VXLSessionEndReasonNetworkRTPError
#define VXLSessionEndReasonNetworkRTPError __NS_SYMBOL_VXL(VXLSessionEndReasonNetworkRTPError)
#endif

#ifndef VXLSessionEndReasonNetworkSessionCreationError
#define VXLSessionEndReasonNetworkSessionCreationError __NS_SYMBOL_VXL(VXLSessionEndReasonNetworkSessionCreationError)
#endif

#ifndef VXLSessionEndReasonNetworkWebsocketError
#define VXLSessionEndReasonNetworkWebsocketError __NS_SYMBOL_VXL(VXLSessionEndReasonNetworkWebsocketError)
#endif

#ifndef WVJB_JS
#define WVJB_JS __NS_SYMBOL_VXL(WVJB_JS)
#endif

#ifndef av_aes_size
#define av_aes_size __NS_SYMBOL_VXL(av_aes_size)
#endif

#ifndef av_md5_size
#define av_md5_size __NS_SYMBOL_VXL(av_md5_size)
#endif

#ifndef av_pix_fmt_descriptors
#define av_pix_fmt_descriptors __NS_SYMBOL_VXL(av_pix_fmt_descriptors)
#endif

#ifndef av_reverse
#define av_reverse __NS_SYMBOL_VXL(av_reverse)
#endif

#ifndef av_sha_size
#define av_sha_size __NS_SYMBOL_VXL(av_sha_size)
#endif

#ifndef av_tree_node_size
#define av_tree_node_size __NS_SYMBOL_VXL(av_tree_node_size)
#endif

#ifndef avpriv_cga_font
#define avpriv_cga_font __NS_SYMBOL_VXL(avpriv_cga_font)
#endif

#ifndef avpriv_vga16_font
#define avpriv_vga16_font __NS_SYMBOL_VXL(avpriv_vga16_font)
#endif

#ifndef cvmaccelerometer_event__descriptor
#define cvmaccelerometer_event__descriptor __NS_SYMBOL_VXL(cvmaccelerometer_event__descriptor)
#endif

#ifndef cvmevent__descriptor
#define cvmevent__descriptor __NS_SYMBOL_VXL(cvmevent__descriptor)
#endif

#ifndef cvmevent__type__descriptor
#define cvmevent__type__descriptor __NS_SYMBOL_VXL(cvmevent__type__descriptor)
#endif

#ifndef cvmevent__type__enum_values_by_name
#define cvmevent__type__enum_values_by_name __NS_SYMBOL_VXL(cvmevent__type__enum_values_by_name)
#endif

#ifndef cvmevent__type__enum_values_by_number
#define cvmevent__type__enum_values_by_number __NS_SYMBOL_VXL(cvmevent__type__enum_values_by_number)
#endif

#ifndef cvmorientation_event__descriptor
#define cvmorientation_event__descriptor __NS_SYMBOL_VXL(cvmorientation_event__descriptor)
#endif

#ifndef cvmpoint__descriptor
#define cvmpoint__descriptor __NS_SYMBOL_VXL(cvmpoint__descriptor)
#endif

#ifndef cvmtouch__descriptor
#define cvmtouch__descriptor __NS_SYMBOL_VXL(cvmtouch__descriptor)
#endif

#ifndef cvmtouch__type__descriptor
#define cvmtouch__type__descriptor __NS_SYMBOL_VXL(cvmtouch__type__descriptor)
#endif

#ifndef cvmtouch__type__enum_values_by_name
#define cvmtouch__type__enum_values_by_name __NS_SYMBOL_VXL(cvmtouch__type__enum_values_by_name)
#endif

#ifndef cvmtouch__type__enum_values_by_number
#define cvmtouch__type__enum_values_by_number __NS_SYMBOL_VXL(cvmtouch__type__enum_values_by_number)
#endif

#ifndef cvmtouch_event__descriptor
#define cvmtouch_event__descriptor __NS_SYMBOL_VXL(cvmtouch_event__descriptor)
#endif

#ifndef eMeans
#define eMeans __NS_SYMBOL_VXL(eMeans)
#endif

#ifndef enableVXLLog
#define enableVXLLog __NS_SYMBOL_VXL(enableVXLLog)
#endif

#ifndef ev_default_loop_ptr
#define ev_default_loop_ptr __NS_SYMBOL_VXL(ev_default_loop_ptr)
#endif

#ifndef ff_log2_tab
#define ff_log2_tab __NS_SYMBOL_VXL(ff_log2_tab)
#endif

#ifndef ff_raw_pix_fmt_tags
#define ff_raw_pix_fmt_tags __NS_SYMBOL_VXL(ff_raw_pix_fmt_tags)
#endif

#ifndef ff_rtsp_options
#define ff_rtsp_options __NS_SYMBOL_VXL(ff_rtsp_options)
#endif

#ifndef ffio_url_class
#define ffio_url_class __NS_SYMBOL_VXL(ffio_url_class)
#endif

#ifndef ffurl_context_class
#define ffurl_context_class __NS_SYMBOL_VXL(ffurl_context_class)
#endif

#ifndef kReachabilityChangedNotification
#define kReachabilityChangedNotification __NS_SYMBOL_VXL(kReachabilityChangedNotification)
#endif

#ifndef net
#define net __NS_SYMBOL_VXL(net)
#endif

#ifndef silk_CB_lags_stage2
#define silk_CB_lags_stage2 __NS_SYMBOL_VXL(silk_CB_lags_stage2)
#endif

#ifndef silk_CB_lags_stage2_10_ms
#define silk_CB_lags_stage2_10_ms __NS_SYMBOL_VXL(silk_CB_lags_stage2_10_ms)
#endif

#ifndef silk_CB_lags_stage3
#define silk_CB_lags_stage3 __NS_SYMBOL_VXL(silk_CB_lags_stage3)
#endif

#ifndef silk_CB_lags_stage3_10_ms
#define silk_CB_lags_stage3_10_ms __NS_SYMBOL_VXL(silk_CB_lags_stage3_10_ms)
#endif

#ifndef silk_LBRR_flags_iCDF_ptr
#define silk_LBRR_flags_iCDF_ptr __NS_SYMBOL_VXL(silk_LBRR_flags_iCDF_ptr)
#endif

#ifndef silk_LSFCosTab_FIX_Q12
#define silk_LSFCosTab_FIX_Q12 __NS_SYMBOL_VXL(silk_LSFCosTab_FIX_Q12)
#endif

#ifndef silk_LTPScales_table_Q14
#define silk_LTPScales_table_Q14 __NS_SYMBOL_VXL(silk_LTPScales_table_Q14)
#endif

#ifndef silk_LTP_gain_BITS_Q5_ptrs
#define silk_LTP_gain_BITS_Q5_ptrs __NS_SYMBOL_VXL(silk_LTP_gain_BITS_Q5_ptrs)
#endif

#ifndef silk_LTP_gain_iCDF_ptrs
#define silk_LTP_gain_iCDF_ptrs __NS_SYMBOL_VXL(silk_LTP_gain_iCDF_ptrs)
#endif

#ifndef silk_LTP_gain_middle_avg_RD_Q14
#define silk_LTP_gain_middle_avg_RD_Q14 __NS_SYMBOL_VXL(silk_LTP_gain_middle_avg_RD_Q14)
#endif

#ifndef silk_LTP_per_index_iCDF
#define silk_LTP_per_index_iCDF __NS_SYMBOL_VXL(silk_LTP_per_index_iCDF)
#endif

#ifndef silk_LTP_vq_ptrs_Q7
#define silk_LTP_vq_ptrs_Q7 __NS_SYMBOL_VXL(silk_LTP_vq_ptrs_Q7)
#endif

#ifndef silk_LTP_vq_sizes
#define silk_LTP_vq_sizes __NS_SYMBOL_VXL(silk_LTP_vq_sizes)
#endif

#ifndef silk_LTPscale_iCDF
#define silk_LTPscale_iCDF __NS_SYMBOL_VXL(silk_LTPscale_iCDF)
#endif

#ifndef silk_Lag_range_stage3
#define silk_Lag_range_stage3 __NS_SYMBOL_VXL(silk_Lag_range_stage3)
#endif

#ifndef silk_Lag_range_stage3_10_ms
#define silk_Lag_range_stage3_10_ms __NS_SYMBOL_VXL(silk_Lag_range_stage3_10_ms)
#endif

#ifndef silk_NLSF_CB_NB_MB
#define silk_NLSF_CB_NB_MB __NS_SYMBOL_VXL(silk_NLSF_CB_NB_MB)
#endif

#ifndef silk_NLSF_CB_WB
#define silk_NLSF_CB_WB __NS_SYMBOL_VXL(silk_NLSF_CB_WB)
#endif

#ifndef silk_NLSF_EXT_iCDF
#define silk_NLSF_EXT_iCDF __NS_SYMBOL_VXL(silk_NLSF_EXT_iCDF)
#endif

#ifndef silk_NLSF_interpolation_factor_iCDF
#define silk_NLSF_interpolation_factor_iCDF __NS_SYMBOL_VXL(silk_NLSF_interpolation_factor_iCDF)
#endif

#ifndef silk_Quantization_Offsets_Q10
#define silk_Quantization_Offsets_Q10 __NS_SYMBOL_VXL(silk_Quantization_Offsets_Q10)
#endif

#ifndef silk_Resampler_1_2_COEFS
#define silk_Resampler_1_2_COEFS __NS_SYMBOL_VXL(silk_Resampler_1_2_COEFS)
#endif

#ifndef silk_Resampler_1_3_COEFS
#define silk_Resampler_1_3_COEFS __NS_SYMBOL_VXL(silk_Resampler_1_3_COEFS)
#endif

#ifndef silk_Resampler_1_4_COEFS
#define silk_Resampler_1_4_COEFS __NS_SYMBOL_VXL(silk_Resampler_1_4_COEFS)
#endif

#ifndef silk_Resampler_1_6_COEFS
#define silk_Resampler_1_6_COEFS __NS_SYMBOL_VXL(silk_Resampler_1_6_COEFS)
#endif

#ifndef silk_Resampler_2_3_COEFS
#define silk_Resampler_2_3_COEFS __NS_SYMBOL_VXL(silk_Resampler_2_3_COEFS)
#endif

#ifndef silk_Resampler_2_3_COEFS_LQ
#define silk_Resampler_2_3_COEFS_LQ __NS_SYMBOL_VXL(silk_Resampler_2_3_COEFS_LQ)
#endif

#ifndef silk_Resampler_3_4_COEFS
#define silk_Resampler_3_4_COEFS __NS_SYMBOL_VXL(silk_Resampler_3_4_COEFS)
#endif

#ifndef silk_SNR_table_Q1
#define silk_SNR_table_Q1 __NS_SYMBOL_VXL(silk_SNR_table_Q1)
#endif

#ifndef silk_TargetRate_table_MB
#define silk_TargetRate_table_MB __NS_SYMBOL_VXL(silk_TargetRate_table_MB)
#endif

#ifndef silk_TargetRate_table_NB
#define silk_TargetRate_table_NB __NS_SYMBOL_VXL(silk_TargetRate_table_NB)
#endif

#ifndef silk_TargetRate_table_WB
#define silk_TargetRate_table_WB __NS_SYMBOL_VXL(silk_TargetRate_table_WB)
#endif

#ifndef silk_Transition_LP_A_Q28
#define silk_Transition_LP_A_Q28 __NS_SYMBOL_VXL(silk_Transition_LP_A_Q28)
#endif

#ifndef silk_Transition_LP_B_Q28
#define silk_Transition_LP_B_Q28 __NS_SYMBOL_VXL(silk_Transition_LP_B_Q28)
#endif

#ifndef silk_delta_gain_iCDF
#define silk_delta_gain_iCDF __NS_SYMBOL_VXL(silk_delta_gain_iCDF)
#endif

#ifndef silk_gain_iCDF
#define silk_gain_iCDF __NS_SYMBOL_VXL(silk_gain_iCDF)
#endif

#ifndef silk_lsb_iCDF
#define silk_lsb_iCDF __NS_SYMBOL_VXL(silk_lsb_iCDF)
#endif

#ifndef silk_max_pulses_table
#define silk_max_pulses_table __NS_SYMBOL_VXL(silk_max_pulses_table)
#endif

#ifndef silk_nb_cbk_searchs_stage3
#define silk_nb_cbk_searchs_stage3 __NS_SYMBOL_VXL(silk_nb_cbk_searchs_stage3)
#endif

#ifndef silk_pitch_contour_10_ms_NB_iCDF
#define silk_pitch_contour_10_ms_NB_iCDF __NS_SYMBOL_VXL(silk_pitch_contour_10_ms_NB_iCDF)
#endif

#ifndef silk_pitch_contour_10_ms_iCDF
#define silk_pitch_contour_10_ms_iCDF __NS_SYMBOL_VXL(silk_pitch_contour_10_ms_iCDF)
#endif

#ifndef silk_pitch_contour_NB_iCDF
#define silk_pitch_contour_NB_iCDF __NS_SYMBOL_VXL(silk_pitch_contour_NB_iCDF)
#endif

#ifndef silk_pitch_contour_iCDF
#define silk_pitch_contour_iCDF __NS_SYMBOL_VXL(silk_pitch_contour_iCDF)
#endif

#ifndef silk_pitch_delta_iCDF
#define silk_pitch_delta_iCDF __NS_SYMBOL_VXL(silk_pitch_delta_iCDF)
#endif

#ifndef silk_pitch_lag_iCDF
#define silk_pitch_lag_iCDF __NS_SYMBOL_VXL(silk_pitch_lag_iCDF)
#endif

#ifndef silk_pulses_per_block_BITS_Q5
#define silk_pulses_per_block_BITS_Q5 __NS_SYMBOL_VXL(silk_pulses_per_block_BITS_Q5)
#endif

#ifndef silk_pulses_per_block_iCDF
#define silk_pulses_per_block_iCDF __NS_SYMBOL_VXL(silk_pulses_per_block_iCDF)
#endif

#ifndef silk_rate_levels_BITS_Q5
#define silk_rate_levels_BITS_Q5 __NS_SYMBOL_VXL(silk_rate_levels_BITS_Q5)
#endif

#ifndef silk_rate_levels_iCDF
#define silk_rate_levels_iCDF __NS_SYMBOL_VXL(silk_rate_levels_iCDF)
#endif

#ifndef silk_resampler_frac_FIR_12
#define silk_resampler_frac_FIR_12 __NS_SYMBOL_VXL(silk_resampler_frac_FIR_12)
#endif

#ifndef silk_shell_code_table0
#define silk_shell_code_table0 __NS_SYMBOL_VXL(silk_shell_code_table0)
#endif

#ifndef silk_shell_code_table1
#define silk_shell_code_table1 __NS_SYMBOL_VXL(silk_shell_code_table1)
#endif

#ifndef silk_shell_code_table2
#define silk_shell_code_table2 __NS_SYMBOL_VXL(silk_shell_code_table2)
#endif

#ifndef silk_shell_code_table3
#define silk_shell_code_table3 __NS_SYMBOL_VXL(silk_shell_code_table3)
#endif

#ifndef silk_shell_code_table_offsets
#define silk_shell_code_table_offsets __NS_SYMBOL_VXL(silk_shell_code_table_offsets)
#endif

#ifndef silk_sign_iCDF
#define silk_sign_iCDF __NS_SYMBOL_VXL(silk_sign_iCDF)
#endif

#ifndef silk_stereo_only_code_mid_iCDF
#define silk_stereo_only_code_mid_iCDF __NS_SYMBOL_VXL(silk_stereo_only_code_mid_iCDF)
#endif

#ifndef silk_stereo_pred_joint_iCDF
#define silk_stereo_pred_joint_iCDF __NS_SYMBOL_VXL(silk_stereo_pred_joint_iCDF)
#endif

#ifndef silk_stereo_pred_quant_Q13
#define silk_stereo_pred_quant_Q13 __NS_SYMBOL_VXL(silk_stereo_pred_quant_Q13)
#endif

#ifndef silk_type_offset_VAD_iCDF
#define silk_type_offset_VAD_iCDF __NS_SYMBOL_VXL(silk_type_offset_VAD_iCDF)
#endif

#ifndef silk_type_offset_no_VAD_iCDF
#define silk_type_offset_no_VAD_iCDF __NS_SYMBOL_VXL(silk_type_offset_no_VAD_iCDF)
#endif

#ifndef silk_uniform3_iCDF
#define silk_uniform3_iCDF __NS_SYMBOL_VXL(silk_uniform3_iCDF)
#endif

#ifndef silk_uniform4_iCDF
#define silk_uniform4_iCDF __NS_SYMBOL_VXL(silk_uniform4_iCDF)
#endif

#ifndef silk_uniform5_iCDF
#define silk_uniform5_iCDF __NS_SYMBOL_VXL(silk_uniform5_iCDF)
#endif

#ifndef silk_uniform6_iCDF
#define silk_uniform6_iCDF __NS_SYMBOL_VXL(silk_uniform6_iCDF)
#endif

#ifndef silk_uniform8_iCDF
#define silk_uniform8_iCDF __NS_SYMBOL_VXL(silk_uniform8_iCDF)
#endif

#ifndef tf_select_table
#define tf_select_table __NS_SYMBOL_VXL(tf_select_table)
#endif

